syntax = "proto3";
package sgc7pb;
option go_package = "github.com/zhs007/slotsgamecore7/sgc7pb";
import "google/protobuf/any.proto";

// ComponentData
message ComponentData {
    repeated int32 usedScenes = 1;
    repeated int32 usedOtherScenes = 2;
    repeated int32 usedResults = 3;
    repeated int32 usedPrizeScenes = 4;
    int32 coinWin = 5;
    int64 cashWin = 6;
    int32 targetScene = 8;
    int32 runIndex = 9;
    repeated int32 srcScenes = 10;
    int32 output = 11;
    string strOutput = 12;
}

// BasicComponentData
message BasicComponentData {
    ComponentData basicComponentData = 1;
}

// BookOfData
message BookOfData {
    ComponentData basicComponentData = 1;
    repeated int32 symbols = 2;
}

// BookOf2Data
message BookOf2Data {
    ComponentData basicComponentData = 1;
    repeated int32 symbols = 2;
}

// CollectorData
message CollectorData {
    int32 val = 1;
    int32 newCollector = 2;
}

// LightningData
message LightningData {
    ComponentData basicComponentData = 1;
	int32 collector = 2;
	int32 val = 3;
	int32 mul = 4;
	int32 newConnector = 5;
}

// MultiLevelMysteryData
message MultiLevelMysteryData {
    ComponentData basicComponentData = 1;
	int32 curLevel = 3;
    int32 curMysteryCode = 4;
}

// MultiLevelReelsData
message MultiLevelReelsData {
    ComponentData basicComponentData = 1;
	int32 curLevel = 3;
}

// MysteryData
message MysteryData {
    ComponentData basicComponentData = 1;
    int32 curMysteryCode = 2;
}

// OverlaySymbolData
message OverlaySymbolData {
    ComponentData basicComponentData = 1;
	int32 curLevel = 2;
}

// BasicWinsData
message BasicWinsData {
    ComponentData basicComponentData = 1;
	string nextComponent = 2;
}

// ReelSetMysteryData
message ReelSetMysteryData {
    ComponentData basicComponentData = 1;
    int32 CurMysteryCode = 2;
}

// MultiLevelReplaceReelData
message MultiLevelReplaceReelData {
    ComponentData basicComponentData = 1;
	int32 curLevel = 3;
}

// RespinData
message RespinData {
    ComponentData basicComponentData = 1;
    int32 lastRespinNum = 2;
    int32 totalRespinNum = 3 [deprecated = true];
	int32 curRespinNum = 4;
	int32 curAddRespinNum = 5;
	int64 totalCoinWin = 6;
	int64 totalCashWin = 7;
    int32 retriggerAddRespinNum = 8;
    int32 lastTriggerNum = 9;
	int32 curTriggerNum = 10;
    repeated int32 triggerRespinNum = 11;
}


// Respin2Data
message Respin2Data {
    ComponentData basicComponentData = 1;
    int32 lastRespinNum = 2;
    int32 totalRespinNum = 3 [deprecated = true];
	int32 curRespinNum = 4;
	int32 curAddRespinNum = 5;
	int64 totalCoinWin = 6;
	int64 totalCashWin = 7;
    int32 retriggerAddRespinNum = 8;
    int32 lastTriggerNum = 9;
	int32 curTriggerNum = 10;
}

// MaskData
message MaskData {
    ComponentData basicComponentData = 1;
    int32 num = 2;
    repeated bool vals = 3;
    int32 newChged = 4;
    repeated bool newVals = 5;
}

// SymbolCollectionData
message SymbolCollectionData {
    ComponentData basicComponentData = 1;
    repeated int32 symbolCodes = 2;
}

// SymbolTriggerData
message SymbolTriggerData {
    ComponentData basicComponentData = 1;
	string nextComponent = 2;
    int32 symbolNum = 3;
    int32 wildNum = 4;
    int32 respinNum = 5;
    int32 wins = 6;
}

// MultiWeightAwardsData
message MultiWeightAwardsData {
    ComponentData basicComponentData = 1;
	repeated bool HasGot = 2;
}

// SymbolValWinsData
message SymbolValWinsData {
    ComponentData basicComponentData = 1;
	int32 wins = 2;
    int32 symbolNum = 3;
    int32 collectorNum = 4;
}

// WeightReelsData
message WeightReelsData {
    ComponentData basicComponentData = 1;
	int32 reelSetIndex = 2;
}

// ScatterTriggerData
message ScatterTriggerData {
    ComponentData basicComponentData = 1;
	string nextComponent = 2;
    int32 symbolNum = 3;
    int32 wildNum = 4;
    int32 respinNum = 5;
    int32 wins = 6;
    int32 winMulti = 7;
}

// LinesTriggerData
message LinesTriggerData {
    ComponentData basicComponentData = 1;
	string nextComponent = 2;
    int32 symbolNum = 3;
    int32 wildNum = 4;
    int32 respinNum = 5;
    int32 wins = 6;
    int32 winMulti = 7;
}

// WaysTriggerData
message WaysTriggerData {
    ComponentData basicComponentData = 1;
	string nextComponent = 2;
    int32 symbolNum = 3;
    int32 wildNum = 4;
    int32 respinNum = 5;
    int32 wins = 6;
    int32 winMulti = 7;
}

// ClusterTriggerData
message ClusterTriggerData {
    ComponentData basicComponentData = 1;
	string nextComponent = 2;
    int32 symbolNum = 3;
    int32 wildNum = 4;
    int32 respinNum = 5;
    int32 wins = 6;
    int32 winMulti = 7;
}

// WinResultMultiData
message WinResultMultiData {
    ComponentData basicComponentData = 1;
    int32 wins = 2;
    int32 winMulti = 3;
}

// WeightAwardsData
message WeightAwardsData {
    ComponentData basicComponentData = 1;
	repeated int32 gotIndex = 2;
}

// RemoveSymbolsData
message RemoveSymbolsData {
    ComponentData basicComponentData = 1;
	int32 removedNum = 2;
}

// WeightBranchData
message WeightBranchData {
    ComponentData basicComponentData = 1;
	string value = 2;
}

// RollSymbolData
message RollSymbolData {
    ComponentData basicComponentData = 1;
	// int32 symbolCode = 2;
    repeated int32 symbolCodes = 3;
}

// QueueBranchData
message QueueBranchData {
    ComponentData basicComponentData = 1;
	int32 queue = 2;
}

// SymbolCollection2Data
message SymbolCollection2Data {
    ComponentData basicComponentData = 1;
    repeated int32 symbolCodes = 2;
}

// PiggyBankData
message PiggyBankData {
    ComponentData basicComponentData = 1;
    int32 wins = 2;
    int32 winMulti = 3;
    int32 savedMoney = 4;
}

// WinResultCacheData
message WinResultCacheData {
    ComponentData basicComponentData = 1;
    int32 wins = 2;
    int32 winMulti = 3;
    int32 winResultNum = 4;
}

// GameParam
message GameParam {
    string firstComponent = 1;
    string nextStepFirstComponent = 2;
    map<string, google.protobuf.Any> mapComponents = 3;
    repeated string historyComponents = 4;
    repeated string respinComponents = 5;
    map<int32, int32> mapVals = 6;
    map<string, int32> mapStrVals = 7;
}