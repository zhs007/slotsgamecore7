// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.5.1
// - protoc             v3.21.12
// source: mathsoolset.proto

package sgc7pb

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.64.0 or later.
const _ = grpc.SupportPackageIsVersion9

const (
	MathToolset_RunScript_FullMethodName = "/sgc7pb.MathToolset/runScript"
)

// MathToolsetClient is the client API for MathToolset service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
//
// MathToolset - Math Toolset Service
type MathToolsetClient interface {
	// RunScript - run script
	RunScript(ctx context.Context, in *RunScript, opts ...grpc.CallOption) (*ReplyRunScript, error)
}

type mathToolsetClient struct {
	cc grpc.ClientConnInterface
}

func NewMathToolsetClient(cc grpc.ClientConnInterface) MathToolsetClient {
	return &mathToolsetClient{cc}
}

func (c *mathToolsetClient) RunScript(ctx context.Context, in *RunScript, opts ...grpc.CallOption) (*ReplyRunScript, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(ReplyRunScript)
	err := c.cc.Invoke(ctx, MathToolset_RunScript_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MathToolsetServer is the server API for MathToolset service.
// All implementations must embed UnimplementedMathToolsetServer
// for forward compatibility.
//
// MathToolset - Math Toolset Service
type MathToolsetServer interface {
	// RunScript - run script
	RunScript(context.Context, *RunScript) (*ReplyRunScript, error)
	mustEmbedUnimplementedMathToolsetServer()
}

// UnimplementedMathToolsetServer must be embedded to have
// forward compatible implementations.
//
// NOTE: this should be embedded by value instead of pointer to avoid a nil
// pointer dereference when methods are called.
type UnimplementedMathToolsetServer struct{}

func (UnimplementedMathToolsetServer) RunScript(context.Context, *RunScript) (*ReplyRunScript, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RunScript not implemented")
}
func (UnimplementedMathToolsetServer) mustEmbedUnimplementedMathToolsetServer() {}
func (UnimplementedMathToolsetServer) testEmbeddedByValue()                     {}

// UnsafeMathToolsetServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to MathToolsetServer will
// result in compilation errors.
type UnsafeMathToolsetServer interface {
	mustEmbedUnimplementedMathToolsetServer()
}

func RegisterMathToolsetServer(s grpc.ServiceRegistrar, srv MathToolsetServer) {
	// If the following call pancis, it indicates UnimplementedMathToolsetServer was
	// embedded by pointer and is nil.  This will cause panics if an
	// unimplemented method is ever invoked, so we test this at initialization
	// time to prevent it from happening at runtime later due to I/O.
	if t, ok := srv.(interface{ testEmbeddedByValue() }); ok {
		t.testEmbeddedByValue()
	}
	s.RegisterService(&MathToolset_ServiceDesc, srv)
}

func _MathToolset_RunScript_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RunScript)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MathToolsetServer).RunScript(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: MathToolset_RunScript_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MathToolsetServer).RunScript(ctx, req.(*RunScript))
	}
	return interceptor(ctx, in, info, handler)
}

// MathToolset_ServiceDesc is the grpc.ServiceDesc for MathToolset service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var MathToolset_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "sgc7pb.MathToolset",
	HandlerType: (*MathToolsetServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "runScript",
			Handler:    _MathToolset_RunScript_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "mathsoolset.proto",
}
