// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v3.21.12
// source: game.proto

package sgc7pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Column
type Column struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Values        []int32                `protobuf:"varint,1,rep,packed,name=values,proto3" json:"values,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Column) Reset() {
	*x = Column{}
	mi := &file_game_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Column) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Column) ProtoMessage() {}

func (x *Column) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Column.ProtoReflect.Descriptor instead.
func (*Column) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{0}
}

func (x *Column) GetValues() []int32 {
	if x != nil {
		return x.Values
	}
	return nil
}

// Row
type Row struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Values        []int32                `protobuf:"varint,1,rep,packed,name=values,proto3" json:"values,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Row) Reset() {
	*x = Row{}
	mi := &file_game_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Row) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Row) ProtoMessage() {}

func (x *Row) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Row.ProtoReflect.Descriptor instead.
func (*Row) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{1}
}

func (x *Row) GetValues() []int32 {
	if x != nil {
		return x.Values
	}
	return nil
}

// LinesData
type LinesData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Lines         []*Row                 `protobuf:"bytes,1,rep,name=lines,proto3" json:"lines,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LinesData) Reset() {
	*x = LinesData{}
	mi := &file_game_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LinesData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LinesData) ProtoMessage() {}

func (x *LinesData) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LinesData.ProtoReflect.Descriptor instead.
func (*LinesData) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{2}
}

func (x *LinesData) GetLines() []*Row {
	if x != nil {
		return x.Lines
	}
	return nil
}

// ReelsData
type ReelsData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Reels         []*Column              `protobuf:"bytes,1,rep,name=reels,proto3" json:"reels,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReelsData) Reset() {
	*x = ReelsData{}
	mi := &file_game_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReelsData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReelsData) ProtoMessage() {}

func (x *ReelsData) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReelsData.ProtoReflect.Descriptor instead.
func (*ReelsData) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{3}
}

func (x *ReelsData) GetReels() []*Column {
	if x != nil {
		return x.Reels
	}
	return nil
}

// GameScene
type GameScene struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Values        []*Column              `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`             // 列
	Indexes       []int32                `protobuf:"varint,2,rep,packed,name=indexes,proto3" json:"indexes,omitempty"`   // 轮子索引
	ValidRow      []int32                `protobuf:"varint,3,rep,packed,name=validRow,proto3" json:"validRow,omitempty"` // 有效的行
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GameScene) Reset() {
	*x = GameScene{}
	mi := &file_game_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GameScene) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameScene) ProtoMessage() {}

func (x *GameScene) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameScene.ProtoReflect.Descriptor instead.
func (*GameScene) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{4}
}

func (x *GameScene) GetValues() []*Column {
	if x != nil {
		return x.Values
	}
	return nil
}

func (x *GameScene) GetIndexes() []int32 {
	if x != nil {
		return x.Indexes
	}
	return nil
}

func (x *GameScene) GetValidRow() []int32 {
	if x != nil {
		return x.ValidRow
	}
	return nil
}

// BasicPlayerPublicState - basic PlayerPublicState
type BasicPlayerPublicState struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CurGameMod    string                 `protobuf:"bytes,1,opt,name=curGameMod,proto3" json:"curGameMod,omitempty"`
	NextM         int32                  `protobuf:"varint,2,opt,name=nextM,proto3" json:"nextM,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BasicPlayerPublicState) Reset() {
	*x = BasicPlayerPublicState{}
	mi := &file_game_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BasicPlayerPublicState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BasicPlayerPublicState) ProtoMessage() {}

func (x *BasicPlayerPublicState) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BasicPlayerPublicState.ProtoReflect.Descriptor instead.
func (*BasicPlayerPublicState) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{5}
}

func (x *BasicPlayerPublicState) GetCurGameMod() string {
	if x != nil {
		return x.CurGameMod
	}
	return ""
}

func (x *BasicPlayerPublicState) GetNextM() int32 {
	if x != nil {
		return x.NextM
	}
	return 0
}

// BasicPlayerPrivateState - basic PlayerPrivateState
type BasicPlayerPrivateState struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BasicPlayerPrivateState) Reset() {
	*x = BasicPlayerPrivateState{}
	mi := &file_game_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BasicPlayerPrivateState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BasicPlayerPrivateState) ProtoMessage() {}

func (x *BasicPlayerPrivateState) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BasicPlayerPrivateState.ProtoReflect.Descriptor instead.
func (*BasicPlayerPrivateState) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{6}
}

// BasicPlayerPublicState2 - basic PlayerPublicState
type BasicPlayerPublicState2 struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Json          string                 `protobuf:"bytes,1,opt,name=json,proto3" json:"json,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BasicPlayerPublicState2) Reset() {
	*x = BasicPlayerPublicState2{}
	mi := &file_game_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BasicPlayerPublicState2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BasicPlayerPublicState2) ProtoMessage() {}

func (x *BasicPlayerPublicState2) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BasicPlayerPublicState2.ProtoReflect.Descriptor instead.
func (*BasicPlayerPublicState2) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{7}
}

func (x *BasicPlayerPublicState2) GetJson() string {
	if x != nil {
		return x.Json
	}
	return ""
}

// BasicPlayerPrivateState2 - basic PlayerPrivateState
type BasicPlayerPrivateState2 struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Json          string                 `protobuf:"bytes,1,opt,name=json,proto3" json:"json,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BasicPlayerPrivateState2) Reset() {
	*x = BasicPlayerPrivateState2{}
	mi := &file_game_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BasicPlayerPrivateState2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BasicPlayerPrivateState2) ProtoMessage() {}

func (x *BasicPlayerPrivateState2) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BasicPlayerPrivateState2.ProtoReflect.Descriptor instead.
func (*BasicPlayerPrivateState2) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{8}
}

func (x *BasicPlayerPrivateState2) GetJson() string {
	if x != nil {
		return x.Json
	}
	return ""
}

// GameConfig
type GameConfig struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Lines         *LinesData             `protobuf:"bytes,1,opt,name=lines,proto3" json:"lines,omitempty"`
	Reels         map[string]*ReelsData  `protobuf:"bytes,2,rep,name=reels,proto3" json:"reels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	PayTables     map[int32]*Row         `protobuf:"bytes,3,rep,name=payTables,proto3" json:"payTables,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Width         int32                  `protobuf:"varint,4,opt,name=width,proto3" json:"width,omitempty"`
	Height        int32                  `protobuf:"varint,5,opt,name=height,proto3" json:"height,omitempty"`
	Ver           string                 `protobuf:"bytes,6,opt,name=ver,proto3" json:"ver,omitempty"`
	CoreVer       string                 `protobuf:"bytes,7,opt,name=coreVer,proto3" json:"coreVer,omitempty"`
	DefaultScene  *GameScene             `protobuf:"bytes,8,opt,name=defaultScene,proto3" json:"defaultScene,omitempty"`
	DefaultScene2 []*GameScene           `protobuf:"bytes,9,rep,name=defaultScene2,proto3" json:"defaultScene2,omitempty"`
	BetMuls       []int32                `protobuf:"varint,10,rep,packed,name=betMuls,proto3" json:"betMuls,omitempty"`
	Data          string                 `protobuf:"bytes,11,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GameConfig) Reset() {
	*x = GameConfig{}
	mi := &file_game_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GameConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameConfig) ProtoMessage() {}

func (x *GameConfig) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameConfig.ProtoReflect.Descriptor instead.
func (*GameConfig) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{9}
}

func (x *GameConfig) GetLines() *LinesData {
	if x != nil {
		return x.Lines
	}
	return nil
}

func (x *GameConfig) GetReels() map[string]*ReelsData {
	if x != nil {
		return x.Reels
	}
	return nil
}

func (x *GameConfig) GetPayTables() map[int32]*Row {
	if x != nil {
		return x.PayTables
	}
	return nil
}

func (x *GameConfig) GetWidth() int32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *GameConfig) GetHeight() int32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *GameConfig) GetVer() string {
	if x != nil {
		return x.Ver
	}
	return ""
}

func (x *GameConfig) GetCoreVer() string {
	if x != nil {
		return x.CoreVer
	}
	return ""
}

func (x *GameConfig) GetDefaultScene() *GameScene {
	if x != nil {
		return x.DefaultScene
	}
	return nil
}

func (x *GameConfig) GetDefaultScene2() []*GameScene {
	if x != nil {
		return x.DefaultScene2
	}
	return nil
}

func (x *GameConfig) GetBetMuls() []int32 {
	if x != nil {
		return x.BetMuls
	}
	return nil
}

func (x *GameConfig) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

// RequestConfig
type RequestConfig struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RequestConfig) Reset() {
	*x = RequestConfig{}
	mi := &file_game_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RequestConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestConfig) ProtoMessage() {}

func (x *RequestConfig) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestConfig.ProtoReflect.Descriptor instead.
func (*RequestConfig) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{10}
}

// PlayerState
type PlayerState struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Public        *anypb.Any             `protobuf:"bytes,1,opt,name=public,proto3" json:"public,omitempty"`
	Private       *anypb.Any             `protobuf:"bytes,2,opt,name=private,proto3" json:"private,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PlayerState) Reset() {
	*x = PlayerState{}
	mi := &file_game_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlayerState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerState) ProtoMessage() {}

func (x *PlayerState) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerState.ProtoReflect.Descriptor instead.
func (*PlayerState) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{11}
}

func (x *PlayerState) GetPublic() *anypb.Any {
	if x != nil {
		return x.Public
	}
	return nil
}

func (x *PlayerState) GetPrivate() *anypb.Any {
	if x != nil {
		return x.Private
	}
	return nil
}

// RequestInitialize
type RequestInitialize struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RequestInitialize) Reset() {
	*x = RequestInitialize{}
	mi := &file_game_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RequestInitialize) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestInitialize) ProtoMessage() {}

func (x *RequestInitialize) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestInitialize.ProtoReflect.Descriptor instead.
func (*RequestInitialize) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{12}
}

type Stake struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CoinBet       int32                  `protobuf:"varint,1,opt,name=coinBet,proto3" json:"coinBet,omitempty"`
	CashBet       int32                  `protobuf:"varint,2,opt,name=cashBet,proto3" json:"cashBet,omitempty"`
	Currency      string                 `protobuf:"bytes,3,opt,name=currency,proto3" json:"currency,omitempty"`
	CoinBet64     int64                  `protobuf:"varint,4,opt,name=coinBet64,proto3" json:"coinBet64,omitempty"`
	CashBet64     int64                  `protobuf:"varint,5,opt,name=cashBet64,proto3" json:"cashBet64,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Stake) Reset() {
	*x = Stake{}
	mi := &file_game_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Stake) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Stake) ProtoMessage() {}

func (x *Stake) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Stake.ProtoReflect.Descriptor instead.
func (*Stake) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{13}
}

func (x *Stake) GetCoinBet() int32 {
	if x != nil {
		return x.CoinBet
	}
	return 0
}

func (x *Stake) GetCashBet() int32 {
	if x != nil {
		return x.CashBet
	}
	return 0
}

func (x *Stake) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *Stake) GetCoinBet64() int64 {
	if x != nil {
		return x.CoinBet64
	}
	return 0
}

func (x *Stake) GetCashBet64() int64 {
	if x != nil {
		return x.CashBet64
	}
	return 0
}

// RequestPlay - play input parameters for the game
type RequestPlay struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	PlayerState       *PlayerState           `protobuf:"bytes,1,opt,name=playerState,proto3" json:"playerState,omitempty"`
	Cheat             string                 `protobuf:"bytes,2,opt,name=cheat,proto3" json:"cheat,omitempty"`
	Stake             *Stake                 `protobuf:"bytes,3,opt,name=stake,proto3" json:"stake,omitempty"`
	ClientParams      string                 `protobuf:"bytes,4,opt,name=clientParams,proto3" json:"clientParams,omitempty"`
	Command           string                 `protobuf:"bytes,5,opt,name=command,proto3" json:"command,omitempty"`
	JackpotStakeValue int64                  `protobuf:"varint,6,opt,name=jackpotStakeValue,proto3" json:"jackpotStakeValue,omitempty"`
	FreespinsActive   bool                   `protobuf:"varint,7,opt,name=freespinsActive,proto3" json:"freespinsActive,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *RequestPlay) Reset() {
	*x = RequestPlay{}
	mi := &file_game_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RequestPlay) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestPlay) ProtoMessage() {}

func (x *RequestPlay) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestPlay.ProtoReflect.Descriptor instead.
func (*RequestPlay) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{14}
}

func (x *RequestPlay) GetPlayerState() *PlayerState {
	if x != nil {
		return x.PlayerState
	}
	return nil
}

func (x *RequestPlay) GetCheat() string {
	if x != nil {
		return x.Cheat
	}
	return ""
}

func (x *RequestPlay) GetStake() *Stake {
	if x != nil {
		return x.Stake
	}
	return nil
}

func (x *RequestPlay) GetClientParams() string {
	if x != nil {
		return x.ClientParams
	}
	return ""
}

func (x *RequestPlay) GetCommand() string {
	if x != nil {
		return x.Command
	}
	return ""
}

func (x *RequestPlay) GetJackpotStakeValue() int64 {
	if x != nil {
		return x.JackpotStakeValue
	}
	return 0
}

func (x *RequestPlay) GetFreespinsActive() bool {
	if x != nil {
		return x.FreespinsActive
	}
	return false
}

// RngInfo - rng infomation
type RngInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Bits          int32                  `protobuf:"varint,1,opt,name=bits,proto3" json:"bits,omitempty"`
	Range         int32                  `protobuf:"varint,2,opt,name=range,proto3" json:"range,omitempty"`
	Value         int32                  `protobuf:"varint,3,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RngInfo) Reset() {
	*x = RngInfo{}
	mi := &file_game_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RngInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RngInfo) ProtoMessage() {}

func (x *RngInfo) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RngInfo.ProtoReflect.Descriptor instead.
func (*RngInfo) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{15}
}

func (x *RngInfo) GetBits() int32 {
	if x != nil {
		return x.Bits
	}
	return 0
}

func (x *RngInfo) GetRange() int32 {
	if x != nil {
		return x.Range
	}
	return 0
}

func (x *RngInfo) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// GameScenePlayResult - result for slots game
type GameScenePlayResult struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          int32                  `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`              // 类型，譬如是线、scatter、还是全线等
	LineIndex     int32                  `protobuf:"varint,2,opt,name=lineIndex,proto3" json:"lineIndex,omitempty"`    // 如果是类型是线，这就是线的索引
	Symbol        int32                  `protobuf:"varint,3,opt,name=symbol,proto3" json:"symbol,omitempty"`          // 中奖符号
	Mul           int32                  `protobuf:"varint,4,opt,name=mul,proto3" json:"mul,omitempty"`                // 中奖符号的基本赔付，paytables里读取
	CoinWin       int32                  `protobuf:"varint,5,opt,name=coinWin,proto3" json:"coinWin,omitempty"`        // 线注的倍数
	CashWin       int32                  `protobuf:"varint,6,opt,name=cashWin,proto3" json:"cashWin,omitempty"`        // 实际的赔付
	Pos           []int32                `protobuf:"varint,7,rep,packed,name=pos,proto3" json:"pos,omitempty"`         // 中奖图标的坐标，[x0,y0,x1,y1,x2,y2]这样的
	OtherMul      int32                  `protobuf:"varint,8,opt,name=otherMul,proto3" json:"otherMul,omitempty"`      // 其它的赔付倍数，譬如一些规则会有其它的翻倍赔付等
	Wilds         int32                  `protobuf:"varint,9,opt,name=wilds,proto3" json:"wilds,omitempty"`            // wilds的数量，某些情况下用来特殊赔付
	SymbolNums    int32                  `protobuf:"varint,10,opt,name=symbolNums,proto3" json:"symbolNums,omitempty"` // 赔付的符号数量
	Value         int32                  `protobuf:"varint,11,opt,name=value,proto3" json:"value,omitempty"`           // 如果是奖励FreeSpin，这里是次数
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GameScenePlayResult) Reset() {
	*x = GameScenePlayResult{}
	mi := &file_game_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GameScenePlayResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameScenePlayResult) ProtoMessage() {}

func (x *GameScenePlayResult) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameScenePlayResult.ProtoReflect.Descriptor instead.
func (*GameScenePlayResult) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{16}
}

func (x *GameScenePlayResult) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *GameScenePlayResult) GetLineIndex() int32 {
	if x != nil {
		return x.LineIndex
	}
	return 0
}

func (x *GameScenePlayResult) GetSymbol() int32 {
	if x != nil {
		return x.Symbol
	}
	return 0
}

func (x *GameScenePlayResult) GetMul() int32 {
	if x != nil {
		return x.Mul
	}
	return 0
}

func (x *GameScenePlayResult) GetCoinWin() int32 {
	if x != nil {
		return x.CoinWin
	}
	return 0
}

func (x *GameScenePlayResult) GetCashWin() int32 {
	if x != nil {
		return x.CashWin
	}
	return 0
}

func (x *GameScenePlayResult) GetPos() []int32 {
	if x != nil {
		return x.Pos
	}
	return nil
}

func (x *GameScenePlayResult) GetOtherMul() int32 {
	if x != nil {
		return x.OtherMul
	}
	return 0
}

func (x *GameScenePlayResult) GetWilds() int32 {
	if x != nil {
		return x.Wilds
	}
	return 0
}

func (x *GameScenePlayResult) GetSymbolNums() int32 {
	if x != nil {
		return x.SymbolNums
	}
	return 0
}

func (x *GameScenePlayResult) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// PlayResult - result for play
type PlayResult struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	CurGameMod      string                 `protobuf:"bytes,1,opt,name=curGameMod,proto3" json:"curGameMod,omitempty"`           // 当前游戏模块，一般是 bg、fg 等等
	CurGameModParam *anypb.Any             `protobuf:"bytes,2,opt,name=curGameModParam,proto3" json:"curGameModParam,omitempty"` // 这个是游戏参数，每个游戏不一样，保存不同游戏的特殊数据
	NextGameMod     string                 `protobuf:"bytes,3,opt,name=nextGameMod,proto3" json:"nextGameMod,omitempty"`         // 下一个 game round 是什么模块，可能是 bg、fg 等等
	Scenes          []*GameScene           `protobuf:"bytes,4,rep,name=scenes,proto3" json:"scenes,omitempty"`                   // 游戏场景列表，如果中间可能出现场景变化，譬如符号变wild==，这里就会有多个场景，赔付始终用最后一个场景
	OtherScenes     []*GameScene           `protobuf:"bytes,5,rep,name=otherScenes,proto3" json:"otherScenes,omitempty"`         // 轮子以外的场景数据，这个用法会根据游戏有差别，譬如每个格子上需要有单独的奖励，就会放这里
	Results         []*GameScenePlayResult `protobuf:"bytes,6,rep,name=results,proto3" json:"results,omitempty"`                 // 中奖的结算列表
	MulPos          []int32                `protobuf:"varint,7,rep,packed,name=mulPos,proto3" json:"mulPos,omitempty"`           // 倍数位置队列，类似[x0,y0,mul0,x1,y1,mul1]
	CurIndex        int32                  `protobuf:"varint,8,opt,name=curIndex,proto3" json:"curIndex,omitempty"`              // 当前局面索引，因为游戏逻辑服不保存状态，所以每次从0开始
	ParentIndex     int32                  `protobuf:"varint,9,opt,name=parentIndex,proto3" json:"parentIndex,omitempty"`        // 产生当前局面的索引
	ModType         string                 `protobuf:"bytes,10,opt,name=modType,proto3" json:"modType,omitempty"`                // 当前局面模式类型，bg、fg、respin、bonus、jackpot 等等
	PrizeScenes     []*GameScene           `protobuf:"bytes,11,rep,name=prizeScenes,proto3" json:"prizeScenes,omitempty"`        // 场景奖励数据，线注的倍数
	PrizeCoinWin    int64                  `protobuf:"varint,12,opt,name=prizeCoinWin,proto3" json:"prizeCoinWin,omitempty"`     // 如果有额外的奖励数据，这里是额外奖励的汇总，单位是coin，也就是线注的倍数
	PrizeCashWin    int64                  `protobuf:"varint,13,opt,name=prizeCashWin,proto3" json:"prizeCashWin,omitempty"`     // 如果有额外的奖励数据，这里是额外奖励的汇总，单位是货币单位，也就是实际的赢得
	JackpotCoinWin  int64                  `protobuf:"varint,14,opt,name=jackpotCoinWin,proto3" json:"jackpotCoinWin,omitempty"` // 如果有游戏自身的jackpot奖励数据，这里是jackpot奖励的汇总，单位是coin，也就是线注的倍数
	JackpotCashWin  int64                  `protobuf:"varint,15,opt,name=jackpotCashWin,proto3" json:"jackpotCashWin,omitempty"` // 如果有游戏自身的jackpot奖励数据，这里是jackpot奖励的汇总，单位是货币单位，也就是实际的赢得
	JackpotType     int32                  `protobuf:"varint,16,opt,name=jackpotType,proto3" json:"jackpotType,omitempty"`       // jackpot类型
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *PlayResult) Reset() {
	*x = PlayResult{}
	mi := &file_game_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlayResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayResult) ProtoMessage() {}

func (x *PlayResult) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayResult.ProtoReflect.Descriptor instead.
func (*PlayResult) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{17}
}

func (x *PlayResult) GetCurGameMod() string {
	if x != nil {
		return x.CurGameMod
	}
	return ""
}

func (x *PlayResult) GetCurGameModParam() *anypb.Any {
	if x != nil {
		return x.CurGameModParam
	}
	return nil
}

func (x *PlayResult) GetNextGameMod() string {
	if x != nil {
		return x.NextGameMod
	}
	return ""
}

func (x *PlayResult) GetScenes() []*GameScene {
	if x != nil {
		return x.Scenes
	}
	return nil
}

func (x *PlayResult) GetOtherScenes() []*GameScene {
	if x != nil {
		return x.OtherScenes
	}
	return nil
}

func (x *PlayResult) GetResults() []*GameScenePlayResult {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *PlayResult) GetMulPos() []int32 {
	if x != nil {
		return x.MulPos
	}
	return nil
}

func (x *PlayResult) GetCurIndex() int32 {
	if x != nil {
		return x.CurIndex
	}
	return 0
}

func (x *PlayResult) GetParentIndex() int32 {
	if x != nil {
		return x.ParentIndex
	}
	return 0
}

func (x *PlayResult) GetModType() string {
	if x != nil {
		return x.ModType
	}
	return ""
}

func (x *PlayResult) GetPrizeScenes() []*GameScene {
	if x != nil {
		return x.PrizeScenes
	}
	return nil
}

func (x *PlayResult) GetPrizeCoinWin() int64 {
	if x != nil {
		return x.PrizeCoinWin
	}
	return 0
}

func (x *PlayResult) GetPrizeCashWin() int64 {
	if x != nil {
		return x.PrizeCashWin
	}
	return 0
}

func (x *PlayResult) GetJackpotCoinWin() int64 {
	if x != nil {
		return x.JackpotCoinWin
	}
	return 0
}

func (x *PlayResult) GetJackpotCashWin() int64 {
	if x != nil {
		return x.JackpotCashWin
	}
	return 0
}

func (x *PlayResult) GetJackpotType() int32 {
	if x != nil {
		return x.JackpotType
	}
	return 0
}

// GameResult - game result
//
//	每个game round的结算数据
type GameResult struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CoinWin       int64                  `protobuf:"varint,1,opt,name=coinWin,proto3" json:"coinWin,omitempty"`      // 线注的倍数
	CashWin       int64                  `protobuf:"varint,2,opt,name=cashWin,proto3" json:"cashWin,omitempty"`      // 实际的赢得
	ClientData    *PlayResult            `protobuf:"bytes,3,opt,name=clientData,proto3" json:"clientData,omitempty"` // 局面数据
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GameResult) Reset() {
	*x = GameResult{}
	mi := &file_game_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GameResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameResult) ProtoMessage() {}

func (x *GameResult) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameResult.ProtoReflect.Descriptor instead.
func (*GameResult) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{18}
}

func (x *GameResult) GetCoinWin() int64 {
	if x != nil {
		return x.CoinWin
	}
	return 0
}

func (x *GameResult) GetCashWin() int64 {
	if x != nil {
		return x.CashWin
	}
	return 0
}

func (x *GameResult) GetClientData() *PlayResult {
	if x != nil {
		return x.ClientData
	}
	return nil
}

// ReplyPlay - play output parameters for the game
type ReplyPlay struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RandomNumbers []*RngInfo             `protobuf:"bytes,1,rep,name=randomNumbers,proto3" json:"randomNumbers,omitempty"`
	PlayerState   *PlayerState           `protobuf:"bytes,2,opt,name=playerState,proto3" json:"playerState,omitempty"`
	Finished      bool                   `protobuf:"varint,3,opt,name=finished,proto3" json:"finished,omitempty"`
	Results       []*GameResult          `protobuf:"bytes,4,rep,name=results,proto3" json:"results,omitempty"`
	NextCommands  []string               `protobuf:"bytes,5,rep,name=nextCommands,proto3" json:"nextCommands,omitempty"`
	// Deprecated: Marked as deprecated in game.proto.
	Stake             *Stake   `protobuf:"bytes,6,opt,name=stake,proto3" json:"stake,omitempty"`
	NextCommandParams []string `protobuf:"bytes,7,rep,name=nextCommandParams,proto3" json:"nextCommandParams,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *ReplyPlay) Reset() {
	*x = ReplyPlay{}
	mi := &file_game_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReplyPlay) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplyPlay) ProtoMessage() {}

func (x *ReplyPlay) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplyPlay.ProtoReflect.Descriptor instead.
func (*ReplyPlay) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{19}
}

func (x *ReplyPlay) GetRandomNumbers() []*RngInfo {
	if x != nil {
		return x.RandomNumbers
	}
	return nil
}

func (x *ReplyPlay) GetPlayerState() *PlayerState {
	if x != nil {
		return x.PlayerState
	}
	return nil
}

func (x *ReplyPlay) GetFinished() bool {
	if x != nil {
		return x.Finished
	}
	return false
}

func (x *ReplyPlay) GetResults() []*GameResult {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *ReplyPlay) GetNextCommands() []string {
	if x != nil {
		return x.NextCommands
	}
	return nil
}

// Deprecated: Marked as deprecated in game.proto.
func (x *ReplyPlay) GetStake() *Stake {
	if x != nil {
		return x.Stake
	}
	return nil
}

func (x *ReplyPlay) GetNextCommandParams() []string {
	if x != nil {
		return x.NextCommandParams
	}
	return nil
}

var File_game_proto protoreflect.FileDescriptor

const file_game_proto_rawDesc = "" +
	"\n" +
	"\n" +
	"game.proto\x12\x06sgc7pb\x1a\x19google/protobuf/any.proto\" \n" +
	"\x06Column\x12\x16\n" +
	"\x06values\x18\x01 \x03(\x05R\x06values\"\x1d\n" +
	"\x03Row\x12\x16\n" +
	"\x06values\x18\x01 \x03(\x05R\x06values\".\n" +
	"\tLinesData\x12!\n" +
	"\x05lines\x18\x01 \x03(\v2\v.sgc7pb.RowR\x05lines\"1\n" +
	"\tReelsData\x12$\n" +
	"\x05reels\x18\x01 \x03(\v2\x0e.sgc7pb.ColumnR\x05reels\"i\n" +
	"\tGameScene\x12&\n" +
	"\x06values\x18\x01 \x03(\v2\x0e.sgc7pb.ColumnR\x06values\x12\x18\n" +
	"\aindexes\x18\x02 \x03(\x05R\aindexes\x12\x1a\n" +
	"\bvalidRow\x18\x03 \x03(\x05R\bvalidRow\"N\n" +
	"\x16BasicPlayerPublicState\x12\x1e\n" +
	"\n" +
	"curGameMod\x18\x01 \x01(\tR\n" +
	"curGameMod\x12\x14\n" +
	"\x05nextM\x18\x02 \x01(\x05R\x05nextM\"\x19\n" +
	"\x17BasicPlayerPrivateState\"-\n" +
	"\x17BasicPlayerPublicState2\x12\x12\n" +
	"\x04json\x18\x01 \x01(\tR\x04json\".\n" +
	"\x18BasicPlayerPrivateState2\x12\x12\n" +
	"\x04json\x18\x01 \x01(\tR\x04json\"\xbb\x04\n" +
	"\n" +
	"GameConfig\x12'\n" +
	"\x05lines\x18\x01 \x01(\v2\x11.sgc7pb.LinesDataR\x05lines\x123\n" +
	"\x05reels\x18\x02 \x03(\v2\x1d.sgc7pb.GameConfig.ReelsEntryR\x05reels\x12?\n" +
	"\tpayTables\x18\x03 \x03(\v2!.sgc7pb.GameConfig.PayTablesEntryR\tpayTables\x12\x14\n" +
	"\x05width\x18\x04 \x01(\x05R\x05width\x12\x16\n" +
	"\x06height\x18\x05 \x01(\x05R\x06height\x12\x10\n" +
	"\x03ver\x18\x06 \x01(\tR\x03ver\x12\x18\n" +
	"\acoreVer\x18\a \x01(\tR\acoreVer\x125\n" +
	"\fdefaultScene\x18\b \x01(\v2\x11.sgc7pb.GameSceneR\fdefaultScene\x127\n" +
	"\rdefaultScene2\x18\t \x03(\v2\x11.sgc7pb.GameSceneR\rdefaultScene2\x12\x18\n" +
	"\abetMuls\x18\n" +
	" \x03(\x05R\abetMuls\x12\x12\n" +
	"\x04data\x18\v \x01(\tR\x04data\x1aK\n" +
	"\n" +
	"ReelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12'\n" +
	"\x05value\x18\x02 \x01(\v2\x11.sgc7pb.ReelsDataR\x05value:\x028\x01\x1aI\n" +
	"\x0ePayTablesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x05R\x03key\x12!\n" +
	"\x05value\x18\x02 \x01(\v2\v.sgc7pb.RowR\x05value:\x028\x01\"\x0f\n" +
	"\rRequestConfig\"k\n" +
	"\vPlayerState\x12,\n" +
	"\x06public\x18\x01 \x01(\v2\x14.google.protobuf.AnyR\x06public\x12.\n" +
	"\aprivate\x18\x02 \x01(\v2\x14.google.protobuf.AnyR\aprivate\"\x13\n" +
	"\x11RequestInitialize\"\x93\x01\n" +
	"\x05Stake\x12\x18\n" +
	"\acoinBet\x18\x01 \x01(\x05R\acoinBet\x12\x18\n" +
	"\acashBet\x18\x02 \x01(\x05R\acashBet\x12\x1a\n" +
	"\bcurrency\x18\x03 \x01(\tR\bcurrency\x12\x1c\n" +
	"\tcoinBet64\x18\x04 \x01(\x03R\tcoinBet64\x12\x1c\n" +
	"\tcashBet64\x18\x05 \x01(\x03R\tcashBet64\"\x95\x02\n" +
	"\vRequestPlay\x125\n" +
	"\vplayerState\x18\x01 \x01(\v2\x13.sgc7pb.PlayerStateR\vplayerState\x12\x14\n" +
	"\x05cheat\x18\x02 \x01(\tR\x05cheat\x12#\n" +
	"\x05stake\x18\x03 \x01(\v2\r.sgc7pb.StakeR\x05stake\x12\"\n" +
	"\fclientParams\x18\x04 \x01(\tR\fclientParams\x12\x18\n" +
	"\acommand\x18\x05 \x01(\tR\acommand\x12,\n" +
	"\x11jackpotStakeValue\x18\x06 \x01(\x03R\x11jackpotStakeValue\x12(\n" +
	"\x0ffreespinsActive\x18\a \x01(\bR\x0ffreespinsActive\"I\n" +
	"\aRngInfo\x12\x12\n" +
	"\x04bits\x18\x01 \x01(\x05R\x04bits\x12\x14\n" +
	"\x05range\x18\x02 \x01(\x05R\x05range\x12\x14\n" +
	"\x05value\x18\x03 \x01(\x05R\x05value\"\x9f\x02\n" +
	"\x13GameScenePlayResult\x12\x12\n" +
	"\x04type\x18\x01 \x01(\x05R\x04type\x12\x1c\n" +
	"\tlineIndex\x18\x02 \x01(\x05R\tlineIndex\x12\x16\n" +
	"\x06symbol\x18\x03 \x01(\x05R\x06symbol\x12\x10\n" +
	"\x03mul\x18\x04 \x01(\x05R\x03mul\x12\x18\n" +
	"\acoinWin\x18\x05 \x01(\x05R\acoinWin\x12\x18\n" +
	"\acashWin\x18\x06 \x01(\x05R\acashWin\x12\x10\n" +
	"\x03pos\x18\a \x03(\x05R\x03pos\x12\x1a\n" +
	"\botherMul\x18\b \x01(\x05R\botherMul\x12\x14\n" +
	"\x05wilds\x18\t \x01(\x05R\x05wilds\x12\x1e\n" +
	"\n" +
	"symbolNums\x18\n" +
	" \x01(\x05R\n" +
	"symbolNums\x12\x14\n" +
	"\x05value\x18\v \x01(\x05R\x05value\"\x84\x05\n" +
	"\n" +
	"PlayResult\x12\x1e\n" +
	"\n" +
	"curGameMod\x18\x01 \x01(\tR\n" +
	"curGameMod\x12>\n" +
	"\x0fcurGameModParam\x18\x02 \x01(\v2\x14.google.protobuf.AnyR\x0fcurGameModParam\x12 \n" +
	"\vnextGameMod\x18\x03 \x01(\tR\vnextGameMod\x12)\n" +
	"\x06scenes\x18\x04 \x03(\v2\x11.sgc7pb.GameSceneR\x06scenes\x123\n" +
	"\votherScenes\x18\x05 \x03(\v2\x11.sgc7pb.GameSceneR\votherScenes\x125\n" +
	"\aresults\x18\x06 \x03(\v2\x1b.sgc7pb.GameScenePlayResultR\aresults\x12\x16\n" +
	"\x06mulPos\x18\a \x03(\x05R\x06mulPos\x12\x1a\n" +
	"\bcurIndex\x18\b \x01(\x05R\bcurIndex\x12 \n" +
	"\vparentIndex\x18\t \x01(\x05R\vparentIndex\x12\x18\n" +
	"\amodType\x18\n" +
	" \x01(\tR\amodType\x123\n" +
	"\vprizeScenes\x18\v \x03(\v2\x11.sgc7pb.GameSceneR\vprizeScenes\x12\"\n" +
	"\fprizeCoinWin\x18\f \x01(\x03R\fprizeCoinWin\x12\"\n" +
	"\fprizeCashWin\x18\r \x01(\x03R\fprizeCashWin\x12&\n" +
	"\x0ejackpotCoinWin\x18\x0e \x01(\x03R\x0ejackpotCoinWin\x12&\n" +
	"\x0ejackpotCashWin\x18\x0f \x01(\x03R\x0ejackpotCashWin\x12 \n" +
	"\vjackpotType\x18\x10 \x01(\x05R\vjackpotType\"t\n" +
	"\n" +
	"GameResult\x12\x18\n" +
	"\acoinWin\x18\x01 \x01(\x03R\acoinWin\x12\x18\n" +
	"\acashWin\x18\x02 \x01(\x03R\acashWin\x122\n" +
	"\n" +
	"clientData\x18\x03 \x01(\v2\x12.sgc7pb.PlayResultR\n" +
	"clientData\"\xbe\x02\n" +
	"\tReplyPlay\x125\n" +
	"\rrandomNumbers\x18\x01 \x03(\v2\x0f.sgc7pb.RngInfoR\rrandomNumbers\x125\n" +
	"\vplayerState\x18\x02 \x01(\v2\x13.sgc7pb.PlayerStateR\vplayerState\x12\x1a\n" +
	"\bfinished\x18\x03 \x01(\bR\bfinished\x12,\n" +
	"\aresults\x18\x04 \x03(\v2\x12.sgc7pb.GameResultR\aresults\x12\"\n" +
	"\fnextCommands\x18\x05 \x03(\tR\fnextCommands\x12'\n" +
	"\x05stake\x18\x06 \x01(\v2\r.sgc7pb.StakeB\x02\x18\x01R\x05stake\x12,\n" +
	"\x11nextCommandParams\x18\a \x03(\tR\x11nextCommandParams2\xee\x01\n" +
	"\vDTGameLogic\x128\n" +
	"\tgetConfig\x12\x15.sgc7pb.RequestConfig\x1a\x12.sgc7pb.GameConfig\"\x00\x12>\n" +
	"\n" +
	"initialize\x12\x19.sgc7pb.RequestInitialize\x1a\x13.sgc7pb.PlayerState\"\x00\x122\n" +
	"\x04play\x12\x13.sgc7pb.RequestPlay\x1a\x11.sgc7pb.ReplyPlay\"\x000\x01\x121\n" +
	"\x05play2\x12\x13.sgc7pb.RequestPlay\x1a\x11.sgc7pb.ReplyPlay\"\x002\xec\x01\n" +
	"\tGameLogic\x128\n" +
	"\tgetConfig\x12\x15.sgc7pb.RequestConfig\x1a\x12.sgc7pb.GameConfig\"\x00\x12>\n" +
	"\n" +
	"initialize\x12\x19.sgc7pb.RequestInitialize\x1a\x13.sgc7pb.PlayerState\"\x00\x122\n" +
	"\x04play\x12\x13.sgc7pb.RequestPlay\x1a\x11.sgc7pb.ReplyPlay\"\x000\x01\x121\n" +
	"\x05play2\x12\x13.sgc7pb.RequestPlay\x1a\x11.sgc7pb.ReplyPlay\"\x00B)Z'github.com/zhs007/slotsgamecore7/sgc7pbb\x06proto3"

var (
	file_game_proto_rawDescOnce sync.Once
	file_game_proto_rawDescData []byte
)

func file_game_proto_rawDescGZIP() []byte {
	file_game_proto_rawDescOnce.Do(func() {
		file_game_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_game_proto_rawDesc), len(file_game_proto_rawDesc)))
	})
	return file_game_proto_rawDescData
}

var file_game_proto_msgTypes = make([]protoimpl.MessageInfo, 22)
var file_game_proto_goTypes = []any{
	(*Column)(nil),                   // 0: sgc7pb.Column
	(*Row)(nil),                      // 1: sgc7pb.Row
	(*LinesData)(nil),                // 2: sgc7pb.LinesData
	(*ReelsData)(nil),                // 3: sgc7pb.ReelsData
	(*GameScene)(nil),                // 4: sgc7pb.GameScene
	(*BasicPlayerPublicState)(nil),   // 5: sgc7pb.BasicPlayerPublicState
	(*BasicPlayerPrivateState)(nil),  // 6: sgc7pb.BasicPlayerPrivateState
	(*BasicPlayerPublicState2)(nil),  // 7: sgc7pb.BasicPlayerPublicState2
	(*BasicPlayerPrivateState2)(nil), // 8: sgc7pb.BasicPlayerPrivateState2
	(*GameConfig)(nil),               // 9: sgc7pb.GameConfig
	(*RequestConfig)(nil),            // 10: sgc7pb.RequestConfig
	(*PlayerState)(nil),              // 11: sgc7pb.PlayerState
	(*RequestInitialize)(nil),        // 12: sgc7pb.RequestInitialize
	(*Stake)(nil),                    // 13: sgc7pb.Stake
	(*RequestPlay)(nil),              // 14: sgc7pb.RequestPlay
	(*RngInfo)(nil),                  // 15: sgc7pb.RngInfo
	(*GameScenePlayResult)(nil),      // 16: sgc7pb.GameScenePlayResult
	(*PlayResult)(nil),               // 17: sgc7pb.PlayResult
	(*GameResult)(nil),               // 18: sgc7pb.GameResult
	(*ReplyPlay)(nil),                // 19: sgc7pb.ReplyPlay
	nil,                              // 20: sgc7pb.GameConfig.ReelsEntry
	nil,                              // 21: sgc7pb.GameConfig.PayTablesEntry
	(*anypb.Any)(nil),                // 22: google.protobuf.Any
}
var file_game_proto_depIdxs = []int32{
	1,  // 0: sgc7pb.LinesData.lines:type_name -> sgc7pb.Row
	0,  // 1: sgc7pb.ReelsData.reels:type_name -> sgc7pb.Column
	0,  // 2: sgc7pb.GameScene.values:type_name -> sgc7pb.Column
	2,  // 3: sgc7pb.GameConfig.lines:type_name -> sgc7pb.LinesData
	20, // 4: sgc7pb.GameConfig.reels:type_name -> sgc7pb.GameConfig.ReelsEntry
	21, // 5: sgc7pb.GameConfig.payTables:type_name -> sgc7pb.GameConfig.PayTablesEntry
	4,  // 6: sgc7pb.GameConfig.defaultScene:type_name -> sgc7pb.GameScene
	4,  // 7: sgc7pb.GameConfig.defaultScene2:type_name -> sgc7pb.GameScene
	22, // 8: sgc7pb.PlayerState.public:type_name -> google.protobuf.Any
	22, // 9: sgc7pb.PlayerState.private:type_name -> google.protobuf.Any
	11, // 10: sgc7pb.RequestPlay.playerState:type_name -> sgc7pb.PlayerState
	13, // 11: sgc7pb.RequestPlay.stake:type_name -> sgc7pb.Stake
	22, // 12: sgc7pb.PlayResult.curGameModParam:type_name -> google.protobuf.Any
	4,  // 13: sgc7pb.PlayResult.scenes:type_name -> sgc7pb.GameScene
	4,  // 14: sgc7pb.PlayResult.otherScenes:type_name -> sgc7pb.GameScene
	16, // 15: sgc7pb.PlayResult.results:type_name -> sgc7pb.GameScenePlayResult
	4,  // 16: sgc7pb.PlayResult.prizeScenes:type_name -> sgc7pb.GameScene
	17, // 17: sgc7pb.GameResult.clientData:type_name -> sgc7pb.PlayResult
	15, // 18: sgc7pb.ReplyPlay.randomNumbers:type_name -> sgc7pb.RngInfo
	11, // 19: sgc7pb.ReplyPlay.playerState:type_name -> sgc7pb.PlayerState
	18, // 20: sgc7pb.ReplyPlay.results:type_name -> sgc7pb.GameResult
	13, // 21: sgc7pb.ReplyPlay.stake:type_name -> sgc7pb.Stake
	3,  // 22: sgc7pb.GameConfig.ReelsEntry.value:type_name -> sgc7pb.ReelsData
	1,  // 23: sgc7pb.GameConfig.PayTablesEntry.value:type_name -> sgc7pb.Row
	10, // 24: sgc7pb.DTGameLogic.getConfig:input_type -> sgc7pb.RequestConfig
	12, // 25: sgc7pb.DTGameLogic.initialize:input_type -> sgc7pb.RequestInitialize
	14, // 26: sgc7pb.DTGameLogic.play:input_type -> sgc7pb.RequestPlay
	14, // 27: sgc7pb.DTGameLogic.play2:input_type -> sgc7pb.RequestPlay
	10, // 28: sgc7pb.GameLogic.getConfig:input_type -> sgc7pb.RequestConfig
	12, // 29: sgc7pb.GameLogic.initialize:input_type -> sgc7pb.RequestInitialize
	14, // 30: sgc7pb.GameLogic.play:input_type -> sgc7pb.RequestPlay
	14, // 31: sgc7pb.GameLogic.play2:input_type -> sgc7pb.RequestPlay
	9,  // 32: sgc7pb.DTGameLogic.getConfig:output_type -> sgc7pb.GameConfig
	11, // 33: sgc7pb.DTGameLogic.initialize:output_type -> sgc7pb.PlayerState
	19, // 34: sgc7pb.DTGameLogic.play:output_type -> sgc7pb.ReplyPlay
	19, // 35: sgc7pb.DTGameLogic.play2:output_type -> sgc7pb.ReplyPlay
	9,  // 36: sgc7pb.GameLogic.getConfig:output_type -> sgc7pb.GameConfig
	11, // 37: sgc7pb.GameLogic.initialize:output_type -> sgc7pb.PlayerState
	19, // 38: sgc7pb.GameLogic.play:output_type -> sgc7pb.ReplyPlay
	19, // 39: sgc7pb.GameLogic.play2:output_type -> sgc7pb.ReplyPlay
	32, // [32:40] is the sub-list for method output_type
	24, // [24:32] is the sub-list for method input_type
	24, // [24:24] is the sub-list for extension type_name
	24, // [24:24] is the sub-list for extension extendee
	0,  // [0:24] is the sub-list for field type_name
}

func init() { file_game_proto_init() }
func file_game_proto_init() {
	if File_game_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_game_proto_rawDesc), len(file_game_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   22,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_game_proto_goTypes,
		DependencyIndexes: file_game_proto_depIdxs,
		MessageInfos:      file_game_proto_msgTypes,
	}.Build()
	File_game_proto = out.File
	file_game_proto_goTypes = nil
	file_game_proto_depIdxs = nil
}
