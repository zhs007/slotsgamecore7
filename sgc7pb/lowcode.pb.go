// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.21.12
// source: lowcode.proto

package sgc7pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ComponentData
type ComponentData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UsedScenes      []int32 `protobuf:"varint,1,rep,packed,name=usedScenes,proto3" json:"usedScenes,omitempty"`
	UsedOtherScenes []int32 `protobuf:"varint,2,rep,packed,name=usedOtherScenes,proto3" json:"usedOtherScenes,omitempty"`
	UsedResults     []int32 `protobuf:"varint,3,rep,packed,name=usedResults,proto3" json:"usedResults,omitempty"`
	UsedPrizeScenes []int32 `protobuf:"varint,4,rep,packed,name=usedPrizeScenes,proto3" json:"usedPrizeScenes,omitempty"`
	CoinWin         int32   `protobuf:"varint,5,opt,name=coinWin,proto3" json:"coinWin,omitempty"`
	CashWin         int64   `protobuf:"varint,6,opt,name=cashWin,proto3" json:"cashWin,omitempty"`
	TargetScene     int32   `protobuf:"varint,8,opt,name=targetScene,proto3" json:"targetScene,omitempty"`
	RunIndex        int32   `protobuf:"varint,9,opt,name=runIndex,proto3" json:"runIndex,omitempty"`
	SrcScenes       []int32 `protobuf:"varint,10,rep,packed,name=srcScenes,proto3" json:"srcScenes,omitempty"`
	Output          int32   `protobuf:"varint,11,opt,name=output,proto3" json:"output,omitempty"`
	StrOutput       string  `protobuf:"bytes,12,opt,name=strOutput,proto3" json:"strOutput,omitempty"`
}

func (x *ComponentData) Reset() {
	*x = ComponentData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lowcode_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ComponentData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComponentData) ProtoMessage() {}

func (x *ComponentData) ProtoReflect() protoreflect.Message {
	mi := &file_lowcode_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComponentData.ProtoReflect.Descriptor instead.
func (*ComponentData) Descriptor() ([]byte, []int) {
	return file_lowcode_proto_rawDescGZIP(), []int{0}
}

func (x *ComponentData) GetUsedScenes() []int32 {
	if x != nil {
		return x.UsedScenes
	}
	return nil
}

func (x *ComponentData) GetUsedOtherScenes() []int32 {
	if x != nil {
		return x.UsedOtherScenes
	}
	return nil
}

func (x *ComponentData) GetUsedResults() []int32 {
	if x != nil {
		return x.UsedResults
	}
	return nil
}

func (x *ComponentData) GetUsedPrizeScenes() []int32 {
	if x != nil {
		return x.UsedPrizeScenes
	}
	return nil
}

func (x *ComponentData) GetCoinWin() int32 {
	if x != nil {
		return x.CoinWin
	}
	return 0
}

func (x *ComponentData) GetCashWin() int64 {
	if x != nil {
		return x.CashWin
	}
	return 0
}

func (x *ComponentData) GetTargetScene() int32 {
	if x != nil {
		return x.TargetScene
	}
	return 0
}

func (x *ComponentData) GetRunIndex() int32 {
	if x != nil {
		return x.RunIndex
	}
	return 0
}

func (x *ComponentData) GetSrcScenes() []int32 {
	if x != nil {
		return x.SrcScenes
	}
	return nil
}

func (x *ComponentData) GetOutput() int32 {
	if x != nil {
		return x.Output
	}
	return 0
}

func (x *ComponentData) GetStrOutput() string {
	if x != nil {
		return x.StrOutput
	}
	return ""
}

// BasicComponentData
type BasicComponentData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BasicComponentData *ComponentData `protobuf:"bytes,1,opt,name=basicComponentData,proto3" json:"basicComponentData,omitempty"`
}

func (x *BasicComponentData) Reset() {
	*x = BasicComponentData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lowcode_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BasicComponentData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BasicComponentData) ProtoMessage() {}

func (x *BasicComponentData) ProtoReflect() protoreflect.Message {
	mi := &file_lowcode_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BasicComponentData.ProtoReflect.Descriptor instead.
func (*BasicComponentData) Descriptor() ([]byte, []int) {
	return file_lowcode_proto_rawDescGZIP(), []int{1}
}

func (x *BasicComponentData) GetBasicComponentData() *ComponentData {
	if x != nil {
		return x.BasicComponentData
	}
	return nil
}

// BookOfData
type BookOfData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BasicComponentData *ComponentData `protobuf:"bytes,1,opt,name=basicComponentData,proto3" json:"basicComponentData,omitempty"`
	Symbols            []int32        `protobuf:"varint,2,rep,packed,name=symbols,proto3" json:"symbols,omitempty"`
}

func (x *BookOfData) Reset() {
	*x = BookOfData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lowcode_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BookOfData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BookOfData) ProtoMessage() {}

func (x *BookOfData) ProtoReflect() protoreflect.Message {
	mi := &file_lowcode_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BookOfData.ProtoReflect.Descriptor instead.
func (*BookOfData) Descriptor() ([]byte, []int) {
	return file_lowcode_proto_rawDescGZIP(), []int{2}
}

func (x *BookOfData) GetBasicComponentData() *ComponentData {
	if x != nil {
		return x.BasicComponentData
	}
	return nil
}

func (x *BookOfData) GetSymbols() []int32 {
	if x != nil {
		return x.Symbols
	}
	return nil
}

// BookOf2Data
type BookOf2Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BasicComponentData *ComponentData `protobuf:"bytes,1,opt,name=basicComponentData,proto3" json:"basicComponentData,omitempty"`
	Symbols            []int32        `protobuf:"varint,2,rep,packed,name=symbols,proto3" json:"symbols,omitempty"`
}

func (x *BookOf2Data) Reset() {
	*x = BookOf2Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lowcode_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BookOf2Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BookOf2Data) ProtoMessage() {}

func (x *BookOf2Data) ProtoReflect() protoreflect.Message {
	mi := &file_lowcode_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BookOf2Data.ProtoReflect.Descriptor instead.
func (*BookOf2Data) Descriptor() ([]byte, []int) {
	return file_lowcode_proto_rawDescGZIP(), []int{3}
}

func (x *BookOf2Data) GetBasicComponentData() *ComponentData {
	if x != nil {
		return x.BasicComponentData
	}
	return nil
}

func (x *BookOf2Data) GetSymbols() []int32 {
	if x != nil {
		return x.Symbols
	}
	return nil
}

// CollectorData
type CollectorData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Val          int32 `protobuf:"varint,1,opt,name=val,proto3" json:"val,omitempty"`
	NewCollector int32 `protobuf:"varint,2,opt,name=newCollector,proto3" json:"newCollector,omitempty"`
}

func (x *CollectorData) Reset() {
	*x = CollectorData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lowcode_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CollectorData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CollectorData) ProtoMessage() {}

func (x *CollectorData) ProtoReflect() protoreflect.Message {
	mi := &file_lowcode_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CollectorData.ProtoReflect.Descriptor instead.
func (*CollectorData) Descriptor() ([]byte, []int) {
	return file_lowcode_proto_rawDescGZIP(), []int{4}
}

func (x *CollectorData) GetVal() int32 {
	if x != nil {
		return x.Val
	}
	return 0
}

func (x *CollectorData) GetNewCollector() int32 {
	if x != nil {
		return x.NewCollector
	}
	return 0
}

// LightningData
type LightningData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BasicComponentData *ComponentData `protobuf:"bytes,1,opt,name=basicComponentData,proto3" json:"basicComponentData,omitempty"`
	Collector          int32          `protobuf:"varint,2,opt,name=collector,proto3" json:"collector,omitempty"`
	Val                int32          `protobuf:"varint,3,opt,name=val,proto3" json:"val,omitempty"`
	Mul                int32          `protobuf:"varint,4,opt,name=mul,proto3" json:"mul,omitempty"`
	NewConnector       int32          `protobuf:"varint,5,opt,name=newConnector,proto3" json:"newConnector,omitempty"`
}

func (x *LightningData) Reset() {
	*x = LightningData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lowcode_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LightningData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LightningData) ProtoMessage() {}

func (x *LightningData) ProtoReflect() protoreflect.Message {
	mi := &file_lowcode_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LightningData.ProtoReflect.Descriptor instead.
func (*LightningData) Descriptor() ([]byte, []int) {
	return file_lowcode_proto_rawDescGZIP(), []int{5}
}

func (x *LightningData) GetBasicComponentData() *ComponentData {
	if x != nil {
		return x.BasicComponentData
	}
	return nil
}

func (x *LightningData) GetCollector() int32 {
	if x != nil {
		return x.Collector
	}
	return 0
}

func (x *LightningData) GetVal() int32 {
	if x != nil {
		return x.Val
	}
	return 0
}

func (x *LightningData) GetMul() int32 {
	if x != nil {
		return x.Mul
	}
	return 0
}

func (x *LightningData) GetNewConnector() int32 {
	if x != nil {
		return x.NewConnector
	}
	return 0
}

// MultiLevelMysteryData
type MultiLevelMysteryData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BasicComponentData *ComponentData `protobuf:"bytes,1,opt,name=basicComponentData,proto3" json:"basicComponentData,omitempty"`
	CurLevel           int32          `protobuf:"varint,3,opt,name=curLevel,proto3" json:"curLevel,omitempty"`
	CurMysteryCode     int32          `protobuf:"varint,4,opt,name=curMysteryCode,proto3" json:"curMysteryCode,omitempty"`
}

func (x *MultiLevelMysteryData) Reset() {
	*x = MultiLevelMysteryData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lowcode_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MultiLevelMysteryData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MultiLevelMysteryData) ProtoMessage() {}

func (x *MultiLevelMysteryData) ProtoReflect() protoreflect.Message {
	mi := &file_lowcode_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MultiLevelMysteryData.ProtoReflect.Descriptor instead.
func (*MultiLevelMysteryData) Descriptor() ([]byte, []int) {
	return file_lowcode_proto_rawDescGZIP(), []int{6}
}

func (x *MultiLevelMysteryData) GetBasicComponentData() *ComponentData {
	if x != nil {
		return x.BasicComponentData
	}
	return nil
}

func (x *MultiLevelMysteryData) GetCurLevel() int32 {
	if x != nil {
		return x.CurLevel
	}
	return 0
}

func (x *MultiLevelMysteryData) GetCurMysteryCode() int32 {
	if x != nil {
		return x.CurMysteryCode
	}
	return 0
}

// MultiLevelReelsData
type MultiLevelReelsData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BasicComponentData *ComponentData `protobuf:"bytes,1,opt,name=basicComponentData,proto3" json:"basicComponentData,omitempty"`
	CurLevel           int32          `protobuf:"varint,3,opt,name=curLevel,proto3" json:"curLevel,omitempty"`
}

func (x *MultiLevelReelsData) Reset() {
	*x = MultiLevelReelsData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lowcode_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MultiLevelReelsData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MultiLevelReelsData) ProtoMessage() {}

func (x *MultiLevelReelsData) ProtoReflect() protoreflect.Message {
	mi := &file_lowcode_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MultiLevelReelsData.ProtoReflect.Descriptor instead.
func (*MultiLevelReelsData) Descriptor() ([]byte, []int) {
	return file_lowcode_proto_rawDescGZIP(), []int{7}
}

func (x *MultiLevelReelsData) GetBasicComponentData() *ComponentData {
	if x != nil {
		return x.BasicComponentData
	}
	return nil
}

func (x *MultiLevelReelsData) GetCurLevel() int32 {
	if x != nil {
		return x.CurLevel
	}
	return 0
}

// MysteryData
type MysteryData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BasicComponentData *ComponentData `protobuf:"bytes,1,opt,name=basicComponentData,proto3" json:"basicComponentData,omitempty"`
	CurMysteryCode     int32          `protobuf:"varint,2,opt,name=curMysteryCode,proto3" json:"curMysteryCode,omitempty"`
}

func (x *MysteryData) Reset() {
	*x = MysteryData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lowcode_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MysteryData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MysteryData) ProtoMessage() {}

func (x *MysteryData) ProtoReflect() protoreflect.Message {
	mi := &file_lowcode_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MysteryData.ProtoReflect.Descriptor instead.
func (*MysteryData) Descriptor() ([]byte, []int) {
	return file_lowcode_proto_rawDescGZIP(), []int{8}
}

func (x *MysteryData) GetBasicComponentData() *ComponentData {
	if x != nil {
		return x.BasicComponentData
	}
	return nil
}

func (x *MysteryData) GetCurMysteryCode() int32 {
	if x != nil {
		return x.CurMysteryCode
	}
	return 0
}

// OverlaySymbolData
type OverlaySymbolData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BasicComponentData *ComponentData `protobuf:"bytes,1,opt,name=basicComponentData,proto3" json:"basicComponentData,omitempty"`
	CurLevel           int32          `protobuf:"varint,2,opt,name=curLevel,proto3" json:"curLevel,omitempty"`
}

func (x *OverlaySymbolData) Reset() {
	*x = OverlaySymbolData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lowcode_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OverlaySymbolData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OverlaySymbolData) ProtoMessage() {}

func (x *OverlaySymbolData) ProtoReflect() protoreflect.Message {
	mi := &file_lowcode_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OverlaySymbolData.ProtoReflect.Descriptor instead.
func (*OverlaySymbolData) Descriptor() ([]byte, []int) {
	return file_lowcode_proto_rawDescGZIP(), []int{9}
}

func (x *OverlaySymbolData) GetBasicComponentData() *ComponentData {
	if x != nil {
		return x.BasicComponentData
	}
	return nil
}

func (x *OverlaySymbolData) GetCurLevel() int32 {
	if x != nil {
		return x.CurLevel
	}
	return 0
}

// BasicWinsData
type BasicWinsData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BasicComponentData *ComponentData `protobuf:"bytes,1,opt,name=basicComponentData,proto3" json:"basicComponentData,omitempty"`
	NextComponent      string         `protobuf:"bytes,2,opt,name=nextComponent,proto3" json:"nextComponent,omitempty"`
}

func (x *BasicWinsData) Reset() {
	*x = BasicWinsData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lowcode_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BasicWinsData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BasicWinsData) ProtoMessage() {}

func (x *BasicWinsData) ProtoReflect() protoreflect.Message {
	mi := &file_lowcode_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BasicWinsData.ProtoReflect.Descriptor instead.
func (*BasicWinsData) Descriptor() ([]byte, []int) {
	return file_lowcode_proto_rawDescGZIP(), []int{10}
}

func (x *BasicWinsData) GetBasicComponentData() *ComponentData {
	if x != nil {
		return x.BasicComponentData
	}
	return nil
}

func (x *BasicWinsData) GetNextComponent() string {
	if x != nil {
		return x.NextComponent
	}
	return ""
}

// ReelSetMysteryData
type ReelSetMysteryData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BasicComponentData *ComponentData `protobuf:"bytes,1,opt,name=basicComponentData,proto3" json:"basicComponentData,omitempty"`
	CurMysteryCode     int32          `protobuf:"varint,2,opt,name=CurMysteryCode,proto3" json:"CurMysteryCode,omitempty"`
}

func (x *ReelSetMysteryData) Reset() {
	*x = ReelSetMysteryData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lowcode_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReelSetMysteryData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReelSetMysteryData) ProtoMessage() {}

func (x *ReelSetMysteryData) ProtoReflect() protoreflect.Message {
	mi := &file_lowcode_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReelSetMysteryData.ProtoReflect.Descriptor instead.
func (*ReelSetMysteryData) Descriptor() ([]byte, []int) {
	return file_lowcode_proto_rawDescGZIP(), []int{11}
}

func (x *ReelSetMysteryData) GetBasicComponentData() *ComponentData {
	if x != nil {
		return x.BasicComponentData
	}
	return nil
}

func (x *ReelSetMysteryData) GetCurMysteryCode() int32 {
	if x != nil {
		return x.CurMysteryCode
	}
	return 0
}

// MultiLevelReplaceReelData
type MultiLevelReplaceReelData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BasicComponentData *ComponentData `protobuf:"bytes,1,opt,name=basicComponentData,proto3" json:"basicComponentData,omitempty"`
	CurLevel           int32          `protobuf:"varint,3,opt,name=curLevel,proto3" json:"curLevel,omitempty"`
}

func (x *MultiLevelReplaceReelData) Reset() {
	*x = MultiLevelReplaceReelData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lowcode_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MultiLevelReplaceReelData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MultiLevelReplaceReelData) ProtoMessage() {}

func (x *MultiLevelReplaceReelData) ProtoReflect() protoreflect.Message {
	mi := &file_lowcode_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MultiLevelReplaceReelData.ProtoReflect.Descriptor instead.
func (*MultiLevelReplaceReelData) Descriptor() ([]byte, []int) {
	return file_lowcode_proto_rawDescGZIP(), []int{12}
}

func (x *MultiLevelReplaceReelData) GetBasicComponentData() *ComponentData {
	if x != nil {
		return x.BasicComponentData
	}
	return nil
}

func (x *MultiLevelReplaceReelData) GetCurLevel() int32 {
	if x != nil {
		return x.CurLevel
	}
	return 0
}

// RespinData
type RespinData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BasicComponentData *ComponentData `protobuf:"bytes,1,opt,name=basicComponentData,proto3" json:"basicComponentData,omitempty"`
	LastRespinNum      int32          `protobuf:"varint,2,opt,name=lastRespinNum,proto3" json:"lastRespinNum,omitempty"`
	// Deprecated: Marked as deprecated in lowcode.proto.
	TotalRespinNum        int32   `protobuf:"varint,3,opt,name=totalRespinNum,proto3" json:"totalRespinNum,omitempty"`
	CurRespinNum          int32   `protobuf:"varint,4,opt,name=curRespinNum,proto3" json:"curRespinNum,omitempty"`
	CurAddRespinNum       int32   `protobuf:"varint,5,opt,name=curAddRespinNum,proto3" json:"curAddRespinNum,omitempty"`
	TotalCoinWin          int64   `protobuf:"varint,6,opt,name=totalCoinWin,proto3" json:"totalCoinWin,omitempty"`
	TotalCashWin          int64   `protobuf:"varint,7,opt,name=totalCashWin,proto3" json:"totalCashWin,omitempty"`
	RetriggerAddRespinNum int32   `protobuf:"varint,8,opt,name=retriggerAddRespinNum,proto3" json:"retriggerAddRespinNum,omitempty"`
	LastTriggerNum        int32   `protobuf:"varint,9,opt,name=lastTriggerNum,proto3" json:"lastTriggerNum,omitempty"`
	CurTriggerNum         int32   `protobuf:"varint,10,opt,name=curTriggerNum,proto3" json:"curTriggerNum,omitempty"`
	TriggerRespinNum      []int32 `protobuf:"varint,11,rep,packed,name=triggerRespinNum,proto3" json:"triggerRespinNum,omitempty"`
}

func (x *RespinData) Reset() {
	*x = RespinData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lowcode_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespinData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespinData) ProtoMessage() {}

func (x *RespinData) ProtoReflect() protoreflect.Message {
	mi := &file_lowcode_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespinData.ProtoReflect.Descriptor instead.
func (*RespinData) Descriptor() ([]byte, []int) {
	return file_lowcode_proto_rawDescGZIP(), []int{13}
}

func (x *RespinData) GetBasicComponentData() *ComponentData {
	if x != nil {
		return x.BasicComponentData
	}
	return nil
}

func (x *RespinData) GetLastRespinNum() int32 {
	if x != nil {
		return x.LastRespinNum
	}
	return 0
}

// Deprecated: Marked as deprecated in lowcode.proto.
func (x *RespinData) GetTotalRespinNum() int32 {
	if x != nil {
		return x.TotalRespinNum
	}
	return 0
}

func (x *RespinData) GetCurRespinNum() int32 {
	if x != nil {
		return x.CurRespinNum
	}
	return 0
}

func (x *RespinData) GetCurAddRespinNum() int32 {
	if x != nil {
		return x.CurAddRespinNum
	}
	return 0
}

func (x *RespinData) GetTotalCoinWin() int64 {
	if x != nil {
		return x.TotalCoinWin
	}
	return 0
}

func (x *RespinData) GetTotalCashWin() int64 {
	if x != nil {
		return x.TotalCashWin
	}
	return 0
}

func (x *RespinData) GetRetriggerAddRespinNum() int32 {
	if x != nil {
		return x.RetriggerAddRespinNum
	}
	return 0
}

func (x *RespinData) GetLastTriggerNum() int32 {
	if x != nil {
		return x.LastTriggerNum
	}
	return 0
}

func (x *RespinData) GetCurTriggerNum() int32 {
	if x != nil {
		return x.CurTriggerNum
	}
	return 0
}

func (x *RespinData) GetTriggerRespinNum() []int32 {
	if x != nil {
		return x.TriggerRespinNum
	}
	return nil
}

// Respin2Data
type Respin2Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BasicComponentData *ComponentData `protobuf:"bytes,1,opt,name=basicComponentData,proto3" json:"basicComponentData,omitempty"`
	LastRespinNum      int32          `protobuf:"varint,2,opt,name=lastRespinNum,proto3" json:"lastRespinNum,omitempty"`
	// Deprecated: Marked as deprecated in lowcode.proto.
	TotalRespinNum        int32 `protobuf:"varint,3,opt,name=totalRespinNum,proto3" json:"totalRespinNum,omitempty"`
	CurRespinNum          int32 `protobuf:"varint,4,opt,name=curRespinNum,proto3" json:"curRespinNum,omitempty"`
	CurAddRespinNum       int32 `protobuf:"varint,5,opt,name=curAddRespinNum,proto3" json:"curAddRespinNum,omitempty"`
	TotalCoinWin          int64 `protobuf:"varint,6,opt,name=totalCoinWin,proto3" json:"totalCoinWin,omitempty"`
	TotalCashWin          int64 `protobuf:"varint,7,opt,name=totalCashWin,proto3" json:"totalCashWin,omitempty"`
	RetriggerAddRespinNum int32 `protobuf:"varint,8,opt,name=retriggerAddRespinNum,proto3" json:"retriggerAddRespinNum,omitempty"`
	LastTriggerNum        int32 `protobuf:"varint,9,opt,name=lastTriggerNum,proto3" json:"lastTriggerNum,omitempty"`
	CurTriggerNum         int32 `protobuf:"varint,10,opt,name=curTriggerNum,proto3" json:"curTriggerNum,omitempty"`
}

func (x *Respin2Data) Reset() {
	*x = Respin2Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lowcode_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Respin2Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Respin2Data) ProtoMessage() {}

func (x *Respin2Data) ProtoReflect() protoreflect.Message {
	mi := &file_lowcode_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Respin2Data.ProtoReflect.Descriptor instead.
func (*Respin2Data) Descriptor() ([]byte, []int) {
	return file_lowcode_proto_rawDescGZIP(), []int{14}
}

func (x *Respin2Data) GetBasicComponentData() *ComponentData {
	if x != nil {
		return x.BasicComponentData
	}
	return nil
}

func (x *Respin2Data) GetLastRespinNum() int32 {
	if x != nil {
		return x.LastRespinNum
	}
	return 0
}

// Deprecated: Marked as deprecated in lowcode.proto.
func (x *Respin2Data) GetTotalRespinNum() int32 {
	if x != nil {
		return x.TotalRespinNum
	}
	return 0
}

func (x *Respin2Data) GetCurRespinNum() int32 {
	if x != nil {
		return x.CurRespinNum
	}
	return 0
}

func (x *Respin2Data) GetCurAddRespinNum() int32 {
	if x != nil {
		return x.CurAddRespinNum
	}
	return 0
}

func (x *Respin2Data) GetTotalCoinWin() int64 {
	if x != nil {
		return x.TotalCoinWin
	}
	return 0
}

func (x *Respin2Data) GetTotalCashWin() int64 {
	if x != nil {
		return x.TotalCashWin
	}
	return 0
}

func (x *Respin2Data) GetRetriggerAddRespinNum() int32 {
	if x != nil {
		return x.RetriggerAddRespinNum
	}
	return 0
}

func (x *Respin2Data) GetLastTriggerNum() int32 {
	if x != nil {
		return x.LastTriggerNum
	}
	return 0
}

func (x *Respin2Data) GetCurTriggerNum() int32 {
	if x != nil {
		return x.CurTriggerNum
	}
	return 0
}

// MaskData
type MaskData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BasicComponentData *ComponentData `protobuf:"bytes,1,opt,name=basicComponentData,proto3" json:"basicComponentData,omitempty"`
	Num                int32          `protobuf:"varint,2,opt,name=num,proto3" json:"num,omitempty"`
	Vals               []bool         `protobuf:"varint,3,rep,packed,name=vals,proto3" json:"vals,omitempty"`
	NewChged           int32          `protobuf:"varint,4,opt,name=newChged,proto3" json:"newChged,omitempty"`
	NewVals            []bool         `protobuf:"varint,5,rep,packed,name=newVals,proto3" json:"newVals,omitempty"`
}

func (x *MaskData) Reset() {
	*x = MaskData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lowcode_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaskData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaskData) ProtoMessage() {}

func (x *MaskData) ProtoReflect() protoreflect.Message {
	mi := &file_lowcode_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaskData.ProtoReflect.Descriptor instead.
func (*MaskData) Descriptor() ([]byte, []int) {
	return file_lowcode_proto_rawDescGZIP(), []int{15}
}

func (x *MaskData) GetBasicComponentData() *ComponentData {
	if x != nil {
		return x.BasicComponentData
	}
	return nil
}

func (x *MaskData) GetNum() int32 {
	if x != nil {
		return x.Num
	}
	return 0
}

func (x *MaskData) GetVals() []bool {
	if x != nil {
		return x.Vals
	}
	return nil
}

func (x *MaskData) GetNewChged() int32 {
	if x != nil {
		return x.NewChged
	}
	return 0
}

func (x *MaskData) GetNewVals() []bool {
	if x != nil {
		return x.NewVals
	}
	return nil
}

// SymbolCollectionData
type SymbolCollectionData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BasicComponentData *ComponentData `protobuf:"bytes,1,opt,name=basicComponentData,proto3" json:"basicComponentData,omitempty"`
	SymbolCodes        []int32        `protobuf:"varint,2,rep,packed,name=symbolCodes,proto3" json:"symbolCodes,omitempty"`
	TotalCoinWin       int64          `protobuf:"varint,3,opt,name=totalCoinWin,proto3" json:"totalCoinWin,omitempty"`
	TotalCashWin       int64          `protobuf:"varint,4,opt,name=totalCashWin,proto3" json:"totalCashWin,omitempty"`
}

func (x *SymbolCollectionData) Reset() {
	*x = SymbolCollectionData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lowcode_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SymbolCollectionData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SymbolCollectionData) ProtoMessage() {}

func (x *SymbolCollectionData) ProtoReflect() protoreflect.Message {
	mi := &file_lowcode_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SymbolCollectionData.ProtoReflect.Descriptor instead.
func (*SymbolCollectionData) Descriptor() ([]byte, []int) {
	return file_lowcode_proto_rawDescGZIP(), []int{16}
}

func (x *SymbolCollectionData) GetBasicComponentData() *ComponentData {
	if x != nil {
		return x.BasicComponentData
	}
	return nil
}

func (x *SymbolCollectionData) GetSymbolCodes() []int32 {
	if x != nil {
		return x.SymbolCodes
	}
	return nil
}

func (x *SymbolCollectionData) GetTotalCoinWin() int64 {
	if x != nil {
		return x.TotalCoinWin
	}
	return 0
}

func (x *SymbolCollectionData) GetTotalCashWin() int64 {
	if x != nil {
		return x.TotalCashWin
	}
	return 0
}

// SymbolTriggerData
type SymbolTriggerData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BasicComponentData *ComponentData `protobuf:"bytes,1,opt,name=basicComponentData,proto3" json:"basicComponentData,omitempty"`
	NextComponent      string         `protobuf:"bytes,2,opt,name=nextComponent,proto3" json:"nextComponent,omitempty"`
	SymbolNum          int32          `protobuf:"varint,3,opt,name=symbolNum,proto3" json:"symbolNum,omitempty"`
	WildNum            int32          `protobuf:"varint,4,opt,name=wildNum,proto3" json:"wildNum,omitempty"`
	RespinNum          int32          `protobuf:"varint,5,opt,name=respinNum,proto3" json:"respinNum,omitempty"`
	Wins               int32          `protobuf:"varint,6,opt,name=wins,proto3" json:"wins,omitempty"`
}

func (x *SymbolTriggerData) Reset() {
	*x = SymbolTriggerData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lowcode_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SymbolTriggerData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SymbolTriggerData) ProtoMessage() {}

func (x *SymbolTriggerData) ProtoReflect() protoreflect.Message {
	mi := &file_lowcode_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SymbolTriggerData.ProtoReflect.Descriptor instead.
func (*SymbolTriggerData) Descriptor() ([]byte, []int) {
	return file_lowcode_proto_rawDescGZIP(), []int{17}
}

func (x *SymbolTriggerData) GetBasicComponentData() *ComponentData {
	if x != nil {
		return x.BasicComponentData
	}
	return nil
}

func (x *SymbolTriggerData) GetNextComponent() string {
	if x != nil {
		return x.NextComponent
	}
	return ""
}

func (x *SymbolTriggerData) GetSymbolNum() int32 {
	if x != nil {
		return x.SymbolNum
	}
	return 0
}

func (x *SymbolTriggerData) GetWildNum() int32 {
	if x != nil {
		return x.WildNum
	}
	return 0
}

func (x *SymbolTriggerData) GetRespinNum() int32 {
	if x != nil {
		return x.RespinNum
	}
	return 0
}

func (x *SymbolTriggerData) GetWins() int32 {
	if x != nil {
		return x.Wins
	}
	return 0
}

// MultiWeightAwardsData
type MultiWeightAwardsData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BasicComponentData *ComponentData `protobuf:"bytes,1,opt,name=basicComponentData,proto3" json:"basicComponentData,omitempty"`
	HasGot             []bool         `protobuf:"varint,2,rep,packed,name=HasGot,proto3" json:"HasGot,omitempty"`
}

func (x *MultiWeightAwardsData) Reset() {
	*x = MultiWeightAwardsData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lowcode_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MultiWeightAwardsData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MultiWeightAwardsData) ProtoMessage() {}

func (x *MultiWeightAwardsData) ProtoReflect() protoreflect.Message {
	mi := &file_lowcode_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MultiWeightAwardsData.ProtoReflect.Descriptor instead.
func (*MultiWeightAwardsData) Descriptor() ([]byte, []int) {
	return file_lowcode_proto_rawDescGZIP(), []int{18}
}

func (x *MultiWeightAwardsData) GetBasicComponentData() *ComponentData {
	if x != nil {
		return x.BasicComponentData
	}
	return nil
}

func (x *MultiWeightAwardsData) GetHasGot() []bool {
	if x != nil {
		return x.HasGot
	}
	return nil
}

// SymbolValWinsData
type SymbolValWinsData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BasicComponentData *ComponentData `protobuf:"bytes,1,opt,name=basicComponentData,proto3" json:"basicComponentData,omitempty"`
	Wins               int32          `protobuf:"varint,2,opt,name=wins,proto3" json:"wins,omitempty"`
	SymbolNum          int32          `protobuf:"varint,3,opt,name=symbolNum,proto3" json:"symbolNum,omitempty"`
	CollectorNum       int32          `protobuf:"varint,4,opt,name=collectorNum,proto3" json:"collectorNum,omitempty"`
}

func (x *SymbolValWinsData) Reset() {
	*x = SymbolValWinsData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lowcode_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SymbolValWinsData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SymbolValWinsData) ProtoMessage() {}

func (x *SymbolValWinsData) ProtoReflect() protoreflect.Message {
	mi := &file_lowcode_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SymbolValWinsData.ProtoReflect.Descriptor instead.
func (*SymbolValWinsData) Descriptor() ([]byte, []int) {
	return file_lowcode_proto_rawDescGZIP(), []int{19}
}

func (x *SymbolValWinsData) GetBasicComponentData() *ComponentData {
	if x != nil {
		return x.BasicComponentData
	}
	return nil
}

func (x *SymbolValWinsData) GetWins() int32 {
	if x != nil {
		return x.Wins
	}
	return 0
}

func (x *SymbolValWinsData) GetSymbolNum() int32 {
	if x != nil {
		return x.SymbolNum
	}
	return 0
}

func (x *SymbolValWinsData) GetCollectorNum() int32 {
	if x != nil {
		return x.CollectorNum
	}
	return 0
}

// WeightReelsData
type WeightReelsData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BasicComponentData *ComponentData `protobuf:"bytes,1,opt,name=basicComponentData,proto3" json:"basicComponentData,omitempty"`
	ReelSetIndex       int32          `protobuf:"varint,2,opt,name=reelSetIndex,proto3" json:"reelSetIndex,omitempty"`
}

func (x *WeightReelsData) Reset() {
	*x = WeightReelsData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lowcode_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WeightReelsData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WeightReelsData) ProtoMessage() {}

func (x *WeightReelsData) ProtoReflect() protoreflect.Message {
	mi := &file_lowcode_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WeightReelsData.ProtoReflect.Descriptor instead.
func (*WeightReelsData) Descriptor() ([]byte, []int) {
	return file_lowcode_proto_rawDescGZIP(), []int{20}
}

func (x *WeightReelsData) GetBasicComponentData() *ComponentData {
	if x != nil {
		return x.BasicComponentData
	}
	return nil
}

func (x *WeightReelsData) GetReelSetIndex() int32 {
	if x != nil {
		return x.ReelSetIndex
	}
	return 0
}

// ScatterTriggerData
type ScatterTriggerData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BasicComponentData *ComponentData `protobuf:"bytes,1,opt,name=basicComponentData,proto3" json:"basicComponentData,omitempty"`
	NextComponent      string         `protobuf:"bytes,2,opt,name=nextComponent,proto3" json:"nextComponent,omitempty"`
	SymbolNum          int32          `protobuf:"varint,3,opt,name=symbolNum,proto3" json:"symbolNum,omitempty"`
	WildNum            int32          `protobuf:"varint,4,opt,name=wildNum,proto3" json:"wildNum,omitempty"`
	RespinNum          int32          `protobuf:"varint,5,opt,name=respinNum,proto3" json:"respinNum,omitempty"`
	Wins               int32          `protobuf:"varint,6,opt,name=wins,proto3" json:"wins,omitempty"`
	WinMulti           int32          `protobuf:"varint,7,opt,name=winMulti,proto3" json:"winMulti,omitempty"`
}

func (x *ScatterTriggerData) Reset() {
	*x = ScatterTriggerData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lowcode_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScatterTriggerData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScatterTriggerData) ProtoMessage() {}

func (x *ScatterTriggerData) ProtoReflect() protoreflect.Message {
	mi := &file_lowcode_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScatterTriggerData.ProtoReflect.Descriptor instead.
func (*ScatterTriggerData) Descriptor() ([]byte, []int) {
	return file_lowcode_proto_rawDescGZIP(), []int{21}
}

func (x *ScatterTriggerData) GetBasicComponentData() *ComponentData {
	if x != nil {
		return x.BasicComponentData
	}
	return nil
}

func (x *ScatterTriggerData) GetNextComponent() string {
	if x != nil {
		return x.NextComponent
	}
	return ""
}

func (x *ScatterTriggerData) GetSymbolNum() int32 {
	if x != nil {
		return x.SymbolNum
	}
	return 0
}

func (x *ScatterTriggerData) GetWildNum() int32 {
	if x != nil {
		return x.WildNum
	}
	return 0
}

func (x *ScatterTriggerData) GetRespinNum() int32 {
	if x != nil {
		return x.RespinNum
	}
	return 0
}

func (x *ScatterTriggerData) GetWins() int32 {
	if x != nil {
		return x.Wins
	}
	return 0
}

func (x *ScatterTriggerData) GetWinMulti() int32 {
	if x != nil {
		return x.WinMulti
	}
	return 0
}

// LinesTriggerData
type LinesTriggerData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BasicComponentData *ComponentData `protobuf:"bytes,1,opt,name=basicComponentData,proto3" json:"basicComponentData,omitempty"`
	NextComponent      string         `protobuf:"bytes,2,opt,name=nextComponent,proto3" json:"nextComponent,omitempty"`
	SymbolNum          int32          `protobuf:"varint,3,opt,name=symbolNum,proto3" json:"symbolNum,omitempty"`
	WildNum            int32          `protobuf:"varint,4,opt,name=wildNum,proto3" json:"wildNum,omitempty"`
	RespinNum          int32          `protobuf:"varint,5,opt,name=respinNum,proto3" json:"respinNum,omitempty"`
	Wins               int32          `protobuf:"varint,6,opt,name=wins,proto3" json:"wins,omitempty"`
	WinMulti           int32          `protobuf:"varint,7,opt,name=winMulti,proto3" json:"winMulti,omitempty"`
}

func (x *LinesTriggerData) Reset() {
	*x = LinesTriggerData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lowcode_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LinesTriggerData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LinesTriggerData) ProtoMessage() {}

func (x *LinesTriggerData) ProtoReflect() protoreflect.Message {
	mi := &file_lowcode_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LinesTriggerData.ProtoReflect.Descriptor instead.
func (*LinesTriggerData) Descriptor() ([]byte, []int) {
	return file_lowcode_proto_rawDescGZIP(), []int{22}
}

func (x *LinesTriggerData) GetBasicComponentData() *ComponentData {
	if x != nil {
		return x.BasicComponentData
	}
	return nil
}

func (x *LinesTriggerData) GetNextComponent() string {
	if x != nil {
		return x.NextComponent
	}
	return ""
}

func (x *LinesTriggerData) GetSymbolNum() int32 {
	if x != nil {
		return x.SymbolNum
	}
	return 0
}

func (x *LinesTriggerData) GetWildNum() int32 {
	if x != nil {
		return x.WildNum
	}
	return 0
}

func (x *LinesTriggerData) GetRespinNum() int32 {
	if x != nil {
		return x.RespinNum
	}
	return 0
}

func (x *LinesTriggerData) GetWins() int32 {
	if x != nil {
		return x.Wins
	}
	return 0
}

func (x *LinesTriggerData) GetWinMulti() int32 {
	if x != nil {
		return x.WinMulti
	}
	return 0
}

// WaysTriggerData
type WaysTriggerData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BasicComponentData *ComponentData `protobuf:"bytes,1,opt,name=basicComponentData,proto3" json:"basicComponentData,omitempty"`
	NextComponent      string         `protobuf:"bytes,2,opt,name=nextComponent,proto3" json:"nextComponent,omitempty"`
	SymbolNum          int32          `protobuf:"varint,3,opt,name=symbolNum,proto3" json:"symbolNum,omitempty"`
	WildNum            int32          `protobuf:"varint,4,opt,name=wildNum,proto3" json:"wildNum,omitempty"`
	RespinNum          int32          `protobuf:"varint,5,opt,name=respinNum,proto3" json:"respinNum,omitempty"`
	Wins               int32          `protobuf:"varint,6,opt,name=wins,proto3" json:"wins,omitempty"`
	WinMulti           int32          `protobuf:"varint,7,opt,name=winMulti,proto3" json:"winMulti,omitempty"`
}

func (x *WaysTriggerData) Reset() {
	*x = WaysTriggerData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lowcode_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WaysTriggerData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WaysTriggerData) ProtoMessage() {}

func (x *WaysTriggerData) ProtoReflect() protoreflect.Message {
	mi := &file_lowcode_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WaysTriggerData.ProtoReflect.Descriptor instead.
func (*WaysTriggerData) Descriptor() ([]byte, []int) {
	return file_lowcode_proto_rawDescGZIP(), []int{23}
}

func (x *WaysTriggerData) GetBasicComponentData() *ComponentData {
	if x != nil {
		return x.BasicComponentData
	}
	return nil
}

func (x *WaysTriggerData) GetNextComponent() string {
	if x != nil {
		return x.NextComponent
	}
	return ""
}

func (x *WaysTriggerData) GetSymbolNum() int32 {
	if x != nil {
		return x.SymbolNum
	}
	return 0
}

func (x *WaysTriggerData) GetWildNum() int32 {
	if x != nil {
		return x.WildNum
	}
	return 0
}

func (x *WaysTriggerData) GetRespinNum() int32 {
	if x != nil {
		return x.RespinNum
	}
	return 0
}

func (x *WaysTriggerData) GetWins() int32 {
	if x != nil {
		return x.Wins
	}
	return 0
}

func (x *WaysTriggerData) GetWinMulti() int32 {
	if x != nil {
		return x.WinMulti
	}
	return 0
}

// ClusterTriggerData
type ClusterTriggerData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BasicComponentData *ComponentData `protobuf:"bytes,1,opt,name=basicComponentData,proto3" json:"basicComponentData,omitempty"`
	NextComponent      string         `protobuf:"bytes,2,opt,name=nextComponent,proto3" json:"nextComponent,omitempty"`
	SymbolNum          int32          `protobuf:"varint,3,opt,name=symbolNum,proto3" json:"symbolNum,omitempty"`
	WildNum            int32          `protobuf:"varint,4,opt,name=wildNum,proto3" json:"wildNum,omitempty"`
	RespinNum          int32          `protobuf:"varint,5,opt,name=respinNum,proto3" json:"respinNum,omitempty"`
	Wins               int32          `protobuf:"varint,6,opt,name=wins,proto3" json:"wins,omitempty"`
	WinMulti           int32          `protobuf:"varint,7,opt,name=winMulti,proto3" json:"winMulti,omitempty"`
}

func (x *ClusterTriggerData) Reset() {
	*x = ClusterTriggerData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lowcode_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClusterTriggerData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterTriggerData) ProtoMessage() {}

func (x *ClusterTriggerData) ProtoReflect() protoreflect.Message {
	mi := &file_lowcode_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClusterTriggerData.ProtoReflect.Descriptor instead.
func (*ClusterTriggerData) Descriptor() ([]byte, []int) {
	return file_lowcode_proto_rawDescGZIP(), []int{24}
}

func (x *ClusterTriggerData) GetBasicComponentData() *ComponentData {
	if x != nil {
		return x.BasicComponentData
	}
	return nil
}

func (x *ClusterTriggerData) GetNextComponent() string {
	if x != nil {
		return x.NextComponent
	}
	return ""
}

func (x *ClusterTriggerData) GetSymbolNum() int32 {
	if x != nil {
		return x.SymbolNum
	}
	return 0
}

func (x *ClusterTriggerData) GetWildNum() int32 {
	if x != nil {
		return x.WildNum
	}
	return 0
}

func (x *ClusterTriggerData) GetRespinNum() int32 {
	if x != nil {
		return x.RespinNum
	}
	return 0
}

func (x *ClusterTriggerData) GetWins() int32 {
	if x != nil {
		return x.Wins
	}
	return 0
}

func (x *ClusterTriggerData) GetWinMulti() int32 {
	if x != nil {
		return x.WinMulti
	}
	return 0
}

// WinResultMultiData
type WinResultMultiData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BasicComponentData *ComponentData `protobuf:"bytes,1,opt,name=basicComponentData,proto3" json:"basicComponentData,omitempty"`
	Wins               int32          `protobuf:"varint,2,opt,name=wins,proto3" json:"wins,omitempty"`
	WinMulti           int32          `protobuf:"varint,3,opt,name=winMulti,proto3" json:"winMulti,omitempty"`
}

func (x *WinResultMultiData) Reset() {
	*x = WinResultMultiData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lowcode_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WinResultMultiData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WinResultMultiData) ProtoMessage() {}

func (x *WinResultMultiData) ProtoReflect() protoreflect.Message {
	mi := &file_lowcode_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WinResultMultiData.ProtoReflect.Descriptor instead.
func (*WinResultMultiData) Descriptor() ([]byte, []int) {
	return file_lowcode_proto_rawDescGZIP(), []int{25}
}

func (x *WinResultMultiData) GetBasicComponentData() *ComponentData {
	if x != nil {
		return x.BasicComponentData
	}
	return nil
}

func (x *WinResultMultiData) GetWins() int32 {
	if x != nil {
		return x.Wins
	}
	return 0
}

func (x *WinResultMultiData) GetWinMulti() int32 {
	if x != nil {
		return x.WinMulti
	}
	return 0
}

// WeightAwardsData
type WeightAwardsData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BasicComponentData *ComponentData `protobuf:"bytes,1,opt,name=basicComponentData,proto3" json:"basicComponentData,omitempty"`
	GotIndex           []int32        `protobuf:"varint,2,rep,packed,name=gotIndex,proto3" json:"gotIndex,omitempty"`
}

func (x *WeightAwardsData) Reset() {
	*x = WeightAwardsData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lowcode_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WeightAwardsData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WeightAwardsData) ProtoMessage() {}

func (x *WeightAwardsData) ProtoReflect() protoreflect.Message {
	mi := &file_lowcode_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WeightAwardsData.ProtoReflect.Descriptor instead.
func (*WeightAwardsData) Descriptor() ([]byte, []int) {
	return file_lowcode_proto_rawDescGZIP(), []int{26}
}

func (x *WeightAwardsData) GetBasicComponentData() *ComponentData {
	if x != nil {
		return x.BasicComponentData
	}
	return nil
}

func (x *WeightAwardsData) GetGotIndex() []int32 {
	if x != nil {
		return x.GotIndex
	}
	return nil
}

// RemoveSymbolsData
type RemoveSymbolsData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BasicComponentData *ComponentData `protobuf:"bytes,1,opt,name=basicComponentData,proto3" json:"basicComponentData,omitempty"`
	RemovedNum         int32          `protobuf:"varint,2,opt,name=removedNum,proto3" json:"removedNum,omitempty"`
}

func (x *RemoveSymbolsData) Reset() {
	*x = RemoveSymbolsData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lowcode_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveSymbolsData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveSymbolsData) ProtoMessage() {}

func (x *RemoveSymbolsData) ProtoReflect() protoreflect.Message {
	mi := &file_lowcode_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveSymbolsData.ProtoReflect.Descriptor instead.
func (*RemoveSymbolsData) Descriptor() ([]byte, []int) {
	return file_lowcode_proto_rawDescGZIP(), []int{27}
}

func (x *RemoveSymbolsData) GetBasicComponentData() *ComponentData {
	if x != nil {
		return x.BasicComponentData
	}
	return nil
}

func (x *RemoveSymbolsData) GetRemovedNum() int32 {
	if x != nil {
		return x.RemovedNum
	}
	return 0
}

// WeightBranchData
type WeightBranchData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BasicComponentData *ComponentData `protobuf:"bytes,1,opt,name=basicComponentData,proto3" json:"basicComponentData,omitempty"`
	Value              string         `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *WeightBranchData) Reset() {
	*x = WeightBranchData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lowcode_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WeightBranchData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WeightBranchData) ProtoMessage() {}

func (x *WeightBranchData) ProtoReflect() protoreflect.Message {
	mi := &file_lowcode_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WeightBranchData.ProtoReflect.Descriptor instead.
func (*WeightBranchData) Descriptor() ([]byte, []int) {
	return file_lowcode_proto_rawDescGZIP(), []int{28}
}

func (x *WeightBranchData) GetBasicComponentData() *ComponentData {
	if x != nil {
		return x.BasicComponentData
	}
	return nil
}

func (x *WeightBranchData) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

// RollSymbolData
type RollSymbolData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BasicComponentData *ComponentData `protobuf:"bytes,1,opt,name=basicComponentData,proto3" json:"basicComponentData,omitempty"`
	// int32 symbolCode = 2;
	SymbolCodes []int32 `protobuf:"varint,3,rep,packed,name=symbolCodes,proto3" json:"symbolCodes,omitempty"`
}

func (x *RollSymbolData) Reset() {
	*x = RollSymbolData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lowcode_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RollSymbolData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RollSymbolData) ProtoMessage() {}

func (x *RollSymbolData) ProtoReflect() protoreflect.Message {
	mi := &file_lowcode_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RollSymbolData.ProtoReflect.Descriptor instead.
func (*RollSymbolData) Descriptor() ([]byte, []int) {
	return file_lowcode_proto_rawDescGZIP(), []int{29}
}

func (x *RollSymbolData) GetBasicComponentData() *ComponentData {
	if x != nil {
		return x.BasicComponentData
	}
	return nil
}

func (x *RollSymbolData) GetSymbolCodes() []int32 {
	if x != nil {
		return x.SymbolCodes
	}
	return nil
}

// QueueBranchData
type QueueBranchData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BasicComponentData *ComponentData `protobuf:"bytes,1,opt,name=basicComponentData,proto3" json:"basicComponentData,omitempty"`
	Queue              int32          `protobuf:"varint,2,opt,name=queue,proto3" json:"queue,omitempty"`
}

func (x *QueueBranchData) Reset() {
	*x = QueueBranchData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lowcode_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueueBranchData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueueBranchData) ProtoMessage() {}

func (x *QueueBranchData) ProtoReflect() protoreflect.Message {
	mi := &file_lowcode_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueueBranchData.ProtoReflect.Descriptor instead.
func (*QueueBranchData) Descriptor() ([]byte, []int) {
	return file_lowcode_proto_rawDescGZIP(), []int{30}
}

func (x *QueueBranchData) GetBasicComponentData() *ComponentData {
	if x != nil {
		return x.BasicComponentData
	}
	return nil
}

func (x *QueueBranchData) GetQueue() int32 {
	if x != nil {
		return x.Queue
	}
	return 0
}

// SymbolCollection2Data
type SymbolCollection2Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BasicComponentData *ComponentData `protobuf:"bytes,1,opt,name=basicComponentData,proto3" json:"basicComponentData,omitempty"`
	SymbolCodes        []int32        `protobuf:"varint,2,rep,packed,name=symbolCodes,proto3" json:"symbolCodes,omitempty"`
}

func (x *SymbolCollection2Data) Reset() {
	*x = SymbolCollection2Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lowcode_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SymbolCollection2Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SymbolCollection2Data) ProtoMessage() {}

func (x *SymbolCollection2Data) ProtoReflect() protoreflect.Message {
	mi := &file_lowcode_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SymbolCollection2Data.ProtoReflect.Descriptor instead.
func (*SymbolCollection2Data) Descriptor() ([]byte, []int) {
	return file_lowcode_proto_rawDescGZIP(), []int{31}
}

func (x *SymbolCollection2Data) GetBasicComponentData() *ComponentData {
	if x != nil {
		return x.BasicComponentData
	}
	return nil
}

func (x *SymbolCollection2Data) GetSymbolCodes() []int32 {
	if x != nil {
		return x.SymbolCodes
	}
	return nil
}

// PiggyBankData
type PiggyBankData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BasicComponentData *ComponentData `protobuf:"bytes,1,opt,name=basicComponentData,proto3" json:"basicComponentData,omitempty"`
	Wins               int32          `protobuf:"varint,2,opt,name=wins,proto3" json:"wins,omitempty"`
	WinMulti           int32          `protobuf:"varint,3,opt,name=winMulti,proto3" json:"winMulti,omitempty"`
	SavedMoney         int32          `protobuf:"varint,4,opt,name=savedMoney,proto3" json:"savedMoney,omitempty"`
}

func (x *PiggyBankData) Reset() {
	*x = PiggyBankData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lowcode_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PiggyBankData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PiggyBankData) ProtoMessage() {}

func (x *PiggyBankData) ProtoReflect() protoreflect.Message {
	mi := &file_lowcode_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PiggyBankData.ProtoReflect.Descriptor instead.
func (*PiggyBankData) Descriptor() ([]byte, []int) {
	return file_lowcode_proto_rawDescGZIP(), []int{32}
}

func (x *PiggyBankData) GetBasicComponentData() *ComponentData {
	if x != nil {
		return x.BasicComponentData
	}
	return nil
}

func (x *PiggyBankData) GetWins() int32 {
	if x != nil {
		return x.Wins
	}
	return 0
}

func (x *PiggyBankData) GetWinMulti() int32 {
	if x != nil {
		return x.WinMulti
	}
	return 0
}

func (x *PiggyBankData) GetSavedMoney() int32 {
	if x != nil {
		return x.SavedMoney
	}
	return 0
}

// WinResultCacheData
type WinResultCacheData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BasicComponentData *ComponentData `protobuf:"bytes,1,opt,name=basicComponentData,proto3" json:"basicComponentData,omitempty"`
	Wins               int32          `protobuf:"varint,2,opt,name=wins,proto3" json:"wins,omitempty"`
	WinMulti           int32          `protobuf:"varint,3,opt,name=winMulti,proto3" json:"winMulti,omitempty"`
	WinResultNum       int32          `protobuf:"varint,4,opt,name=winResultNum,proto3" json:"winResultNum,omitempty"`
}

func (x *WinResultCacheData) Reset() {
	*x = WinResultCacheData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lowcode_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WinResultCacheData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WinResultCacheData) ProtoMessage() {}

func (x *WinResultCacheData) ProtoReflect() protoreflect.Message {
	mi := &file_lowcode_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WinResultCacheData.ProtoReflect.Descriptor instead.
func (*WinResultCacheData) Descriptor() ([]byte, []int) {
	return file_lowcode_proto_rawDescGZIP(), []int{33}
}

func (x *WinResultCacheData) GetBasicComponentData() *ComponentData {
	if x != nil {
		return x.BasicComponentData
	}
	return nil
}

func (x *WinResultCacheData) GetWins() int32 {
	if x != nil {
		return x.Wins
	}
	return 0
}

func (x *WinResultCacheData) GetWinMulti() int32 {
	if x != nil {
		return x.WinMulti
	}
	return 0
}

func (x *WinResultCacheData) GetWinResultNum() int32 {
	if x != nil {
		return x.WinResultNum
	}
	return 0
}

// PositionCollectionData
type PositionCollectionData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BasicComponentData *ComponentData `protobuf:"bytes,1,opt,name=basicComponentData,proto3" json:"basicComponentData,omitempty"`
	Pos                []int32        `protobuf:"varint,2,rep,packed,name=pos,proto3" json:"pos,omitempty"`
}

func (x *PositionCollectionData) Reset() {
	*x = PositionCollectionData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lowcode_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PositionCollectionData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PositionCollectionData) ProtoMessage() {}

func (x *PositionCollectionData) ProtoReflect() protoreflect.Message {
	mi := &file_lowcode_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PositionCollectionData.ProtoReflect.Descriptor instead.
func (*PositionCollectionData) Descriptor() ([]byte, []int) {
	return file_lowcode_proto_rawDescGZIP(), []int{34}
}

func (x *PositionCollectionData) GetBasicComponentData() *ComponentData {
	if x != nil {
		return x.BasicComponentData
	}
	return nil
}

func (x *PositionCollectionData) GetPos() []int32 {
	if x != nil {
		return x.Pos
	}
	return nil
}

// RollNumberData
type RollNumberData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BasicComponentData *ComponentData `protobuf:"bytes,1,opt,name=basicComponentData,proto3" json:"basicComponentData,omitempty"`
	Number             int32          `protobuf:"varint,2,opt,name=number,proto3" json:"number,omitempty"`
}

func (x *RollNumberData) Reset() {
	*x = RollNumberData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lowcode_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RollNumberData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RollNumberData) ProtoMessage() {}

func (x *RollNumberData) ProtoReflect() protoreflect.Message {
	mi := &file_lowcode_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RollNumberData.ProtoReflect.Descriptor instead.
func (*RollNumberData) Descriptor() ([]byte, []int) {
	return file_lowcode_proto_rawDescGZIP(), []int{35}
}

func (x *RollNumberData) GetBasicComponentData() *ComponentData {
	if x != nil {
		return x.BasicComponentData
	}
	return nil
}

func (x *RollNumberData) GetNumber() int32 {
	if x != nil {
		return x.Number
	}
	return 0
}

// GenGigaSymbolData
type GenGigaSymbolData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BasicComponentData *ComponentData `protobuf:"bytes,1,opt,name=basicComponentData,proto3" json:"basicComponentData,omitempty"`
	Pos                []int32        `protobuf:"varint,2,rep,packed,name=pos,proto3" json:"pos,omitempty"`
}

func (x *GenGigaSymbolData) Reset() {
	*x = GenGigaSymbolData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lowcode_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenGigaSymbolData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenGigaSymbolData) ProtoMessage() {}

func (x *GenGigaSymbolData) ProtoReflect() protoreflect.Message {
	mi := &file_lowcode_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenGigaSymbolData.ProtoReflect.Descriptor instead.
func (*GenGigaSymbolData) Descriptor() ([]byte, []int) {
	return file_lowcode_proto_rawDescGZIP(), []int{36}
}

func (x *GenGigaSymbolData) GetBasicComponentData() *ComponentData {
	if x != nil {
		return x.BasicComponentData
	}
	return nil
}

func (x *GenGigaSymbolData) GetPos() []int32 {
	if x != nil {
		return x.Pos
	}
	return nil
}

// MoveSymbolData
type MoveSymbolData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BasicComponentData *ComponentData `protobuf:"bytes,1,opt,name=basicComponentData,proto3" json:"basicComponentData,omitempty"`
	Pos                []int32        `protobuf:"varint,2,rep,packed,name=pos,proto3" json:"pos,omitempty"`
}

func (x *MoveSymbolData) Reset() {
	*x = MoveSymbolData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lowcode_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MoveSymbolData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MoveSymbolData) ProtoMessage() {}

func (x *MoveSymbolData) ProtoReflect() protoreflect.Message {
	mi := &file_lowcode_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MoveSymbolData.ProtoReflect.Descriptor instead.
func (*MoveSymbolData) Descriptor() ([]byte, []int) {
	return file_lowcode_proto_rawDescGZIP(), []int{37}
}

func (x *MoveSymbolData) GetBasicComponentData() *ComponentData {
	if x != nil {
		return x.BasicComponentData
	}
	return nil
}

func (x *MoveSymbolData) GetPos() []int32 {
	if x != nil {
		return x.Pos
	}
	return nil
}

// CatchSymbolsData
type CatchSymbolsData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BasicComponentData *ComponentData `protobuf:"bytes,1,opt,name=basicComponentData,proto3" json:"basicComponentData,omitempty"`
	Pos                []int32        `protobuf:"varint,2,rep,packed,name=pos,proto3" json:"pos,omitempty"`
}

func (x *CatchSymbolsData) Reset() {
	*x = CatchSymbolsData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lowcode_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CatchSymbolsData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CatchSymbolsData) ProtoMessage() {}

func (x *CatchSymbolsData) ProtoReflect() protoreflect.Message {
	mi := &file_lowcode_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CatchSymbolsData.ProtoReflect.Descriptor instead.
func (*CatchSymbolsData) Descriptor() ([]byte, []int) {
	return file_lowcode_proto_rawDescGZIP(), []int{38}
}

func (x *CatchSymbolsData) GetBasicComponentData() *ComponentData {
	if x != nil {
		return x.BasicComponentData
	}
	return nil
}

func (x *CatchSymbolsData) GetPos() []int32 {
	if x != nil {
		return x.Pos
	}
	return nil
}

// BurstSymbolsData
type BurstSymbolsData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BasicComponentData *ComponentData `protobuf:"bytes,1,opt,name=basicComponentData,proto3" json:"basicComponentData,omitempty"`
	Pos                []int32        `protobuf:"varint,2,rep,packed,name=pos,proto3" json:"pos,omitempty"`
}

func (x *BurstSymbolsData) Reset() {
	*x = BurstSymbolsData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lowcode_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BurstSymbolsData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BurstSymbolsData) ProtoMessage() {}

func (x *BurstSymbolsData) ProtoReflect() protoreflect.Message {
	mi := &file_lowcode_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BurstSymbolsData.ProtoReflect.Descriptor instead.
func (*BurstSymbolsData) Descriptor() ([]byte, []int) {
	return file_lowcode_proto_rawDescGZIP(), []int{39}
}

func (x *BurstSymbolsData) GetBasicComponentData() *ComponentData {
	if x != nil {
		return x.BasicComponentData
	}
	return nil
}

func (x *BurstSymbolsData) GetPos() []int32 {
	if x != nil {
		return x.Pos
	}
	return nil
}

// WinResultModifierData
type WinResultModifierData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BasicComponentData *ComponentData `protobuf:"bytes,1,opt,name=basicComponentData,proto3" json:"basicComponentData,omitempty"`
	Wins               int32          `protobuf:"varint,2,opt,name=wins,proto3" json:"wins,omitempty"`
	WinMulti           int32          `protobuf:"varint,3,opt,name=winMulti,proto3" json:"winMulti,omitempty"`
}

func (x *WinResultModifierData) Reset() {
	*x = WinResultModifierData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lowcode_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WinResultModifierData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WinResultModifierData) ProtoMessage() {}

func (x *WinResultModifierData) ProtoReflect() protoreflect.Message {
	mi := &file_lowcode_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WinResultModifierData.ProtoReflect.Descriptor instead.
func (*WinResultModifierData) Descriptor() ([]byte, []int) {
	return file_lowcode_proto_rawDescGZIP(), []int{40}
}

func (x *WinResultModifierData) GetBasicComponentData() *ComponentData {
	if x != nil {
		return x.BasicComponentData
	}
	return nil
}

func (x *WinResultModifierData) GetWins() int32 {
	if x != nil {
		return x.Wins
	}
	return 0
}

func (x *WinResultModifierData) GetWinMulti() int32 {
	if x != nil {
		return x.WinMulti
	}
	return 0
}

// ReelTriggerData
type ReelTriggerData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BasicComponentData *ComponentData `protobuf:"bytes,1,opt,name=basicComponentData,proto3" json:"basicComponentData,omitempty"`
	NextComponent      string         `protobuf:"bytes,2,opt,name=nextComponent,proto3" json:"nextComponent,omitempty"`
	Masks              []bool         `protobuf:"varint,3,rep,packed,name=masks,proto3" json:"masks,omitempty"`
	Number             int32          `protobuf:"varint,4,opt,name=number,proto3" json:"number,omitempty"`
}

func (x *ReelTriggerData) Reset() {
	*x = ReelTriggerData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lowcode_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReelTriggerData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReelTriggerData) ProtoMessage() {}

func (x *ReelTriggerData) ProtoReflect() protoreflect.Message {
	mi := &file_lowcode_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReelTriggerData.ProtoReflect.Descriptor instead.
func (*ReelTriggerData) Descriptor() ([]byte, []int) {
	return file_lowcode_proto_rawDescGZIP(), []int{41}
}

func (x *ReelTriggerData) GetBasicComponentData() *ComponentData {
	if x != nil {
		return x.BasicComponentData
	}
	return nil
}

func (x *ReelTriggerData) GetNextComponent() string {
	if x != nil {
		return x.NextComponent
	}
	return ""
}

func (x *ReelTriggerData) GetMasks() []bool {
	if x != nil {
		return x.Masks
	}
	return nil
}

func (x *ReelTriggerData) GetNumber() int32 {
	if x != nil {
		return x.Number
	}
	return 0
}

// JackpotData
type JackpotData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BasicComponentData *ComponentData `protobuf:"bytes,1,opt,name=basicComponentData,proto3" json:"basicComponentData,omitempty"`
	Wins               int32          `protobuf:"varint,2,opt,name=wins,proto3" json:"wins,omitempty"`
	WinMulti           int32          `protobuf:"varint,3,opt,name=winMulti,proto3" json:"winMulti,omitempty"`
}

func (x *JackpotData) Reset() {
	*x = JackpotData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lowcode_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JackpotData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JackpotData) ProtoMessage() {}

func (x *JackpotData) ProtoReflect() protoreflect.Message {
	mi := &file_lowcode_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JackpotData.ProtoReflect.Descriptor instead.
func (*JackpotData) Descriptor() ([]byte, []int) {
	return file_lowcode_proto_rawDescGZIP(), []int{42}
}

func (x *JackpotData) GetBasicComponentData() *ComponentData {
	if x != nil {
		return x.BasicComponentData
	}
	return nil
}

func (x *JackpotData) GetWins() int32 {
	if x != nil {
		return x.Wins
	}
	return 0
}

func (x *JackpotData) GetWinMulti() int32 {
	if x != nil {
		return x.WinMulti
	}
	return 0
}

// CheckValData
type CheckValData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BasicComponentData *ComponentData `protobuf:"bytes,1,opt,name=basicComponentData,proto3" json:"basicComponentData,omitempty"`
	IsTrigger          bool           `protobuf:"varint,2,opt,name=isTrigger,proto3" json:"isTrigger,omitempty"`
}

func (x *CheckValData) Reset() {
	*x = CheckValData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lowcode_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckValData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckValData) ProtoMessage() {}

func (x *CheckValData) ProtoReflect() protoreflect.Message {
	mi := &file_lowcode_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckValData.ProtoReflect.Descriptor instead.
func (*CheckValData) Descriptor() ([]byte, []int) {
	return file_lowcode_proto_rawDescGZIP(), []int{43}
}

func (x *CheckValData) GetBasicComponentData() *ComponentData {
	if x != nil {
		return x.BasicComponentData
	}
	return nil
}

func (x *CheckValData) GetIsTrigger() bool {
	if x != nil {
		return x.IsTrigger
	}
	return false
}

// AddSymbolsData
type AddSymbolsData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BasicComponentData *ComponentData `protobuf:"bytes,1,opt,name=basicComponentData,proto3" json:"basicComponentData,omitempty"`
	SymbolNum          int32          `protobuf:"varint,2,opt,name=symbolNum,proto3" json:"symbolNum,omitempty"`
}

func (x *AddSymbolsData) Reset() {
	*x = AddSymbolsData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lowcode_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddSymbolsData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddSymbolsData) ProtoMessage() {}

func (x *AddSymbolsData) ProtoReflect() protoreflect.Message {
	mi := &file_lowcode_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddSymbolsData.ProtoReflect.Descriptor instead.
func (*AddSymbolsData) Descriptor() ([]byte, []int) {
	return file_lowcode_proto_rawDescGZIP(), []int{44}
}

func (x *AddSymbolsData) GetBasicComponentData() *ComponentData {
	if x != nil {
		return x.BasicComponentData
	}
	return nil
}

func (x *AddSymbolsData) GetSymbolNum() int32 {
	if x != nil {
		return x.SymbolNum
	}
	return 0
}

// AdjacentPayTriggerData
type AdjacentPayTriggerData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BasicComponentData *ComponentData `protobuf:"bytes,1,opt,name=basicComponentData,proto3" json:"basicComponentData,omitempty"`
	NextComponent      string         `protobuf:"bytes,2,opt,name=nextComponent,proto3" json:"nextComponent,omitempty"`
	SymbolNum          int32          `protobuf:"varint,3,opt,name=symbolNum,proto3" json:"symbolNum,omitempty"`
	WildNum            int32          `protobuf:"varint,4,opt,name=wildNum,proto3" json:"wildNum,omitempty"`
	RespinNum          int32          `protobuf:"varint,5,opt,name=respinNum,proto3" json:"respinNum,omitempty"`
	Wins               int32          `protobuf:"varint,6,opt,name=wins,proto3" json:"wins,omitempty"`
	WinMulti           int32          `protobuf:"varint,7,opt,name=winMulti,proto3" json:"winMulti,omitempty"`
}

func (x *AdjacentPayTriggerData) Reset() {
	*x = AdjacentPayTriggerData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lowcode_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdjacentPayTriggerData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdjacentPayTriggerData) ProtoMessage() {}

func (x *AdjacentPayTriggerData) ProtoReflect() protoreflect.Message {
	mi := &file_lowcode_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdjacentPayTriggerData.ProtoReflect.Descriptor instead.
func (*AdjacentPayTriggerData) Descriptor() ([]byte, []int) {
	return file_lowcode_proto_rawDescGZIP(), []int{45}
}

func (x *AdjacentPayTriggerData) GetBasicComponentData() *ComponentData {
	if x != nil {
		return x.BasicComponentData
	}
	return nil
}

func (x *AdjacentPayTriggerData) GetNextComponent() string {
	if x != nil {
		return x.NextComponent
	}
	return ""
}

func (x *AdjacentPayTriggerData) GetSymbolNum() int32 {
	if x != nil {
		return x.SymbolNum
	}
	return 0
}

func (x *AdjacentPayTriggerData) GetWildNum() int32 {
	if x != nil {
		return x.WildNum
	}
	return 0
}

func (x *AdjacentPayTriggerData) GetRespinNum() int32 {
	if x != nil {
		return x.RespinNum
	}
	return 0
}

func (x *AdjacentPayTriggerData) GetWins() int32 {
	if x != nil {
		return x.Wins
	}
	return 0
}

func (x *AdjacentPayTriggerData) GetWinMulti() int32 {
	if x != nil {
		return x.WinMulti
	}
	return 0
}

// GameParam
type GameParam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FirstComponent         string                `protobuf:"bytes,1,opt,name=firstComponent,proto3" json:"firstComponent,omitempty"`
	NextStepFirstComponent string                `protobuf:"bytes,2,opt,name=nextStepFirstComponent,proto3" json:"nextStepFirstComponent,omitempty"`
	MapComponents          map[string]*anypb.Any `protobuf:"bytes,3,rep,name=mapComponents,proto3" json:"mapComponents,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	HistoryComponents      []string              `protobuf:"bytes,4,rep,name=historyComponents,proto3" json:"historyComponents,omitempty"`
	RespinComponents       []string              `protobuf:"bytes,5,rep,name=respinComponents,proto3" json:"respinComponents,omitempty"`
	MapVals                map[int32]int32       `protobuf:"bytes,6,rep,name=mapVals,proto3" json:"mapVals,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	MapStrVals             map[string]int32      `protobuf:"bytes,7,rep,name=mapStrVals,proto3" json:"mapStrVals,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *GameParam) Reset() {
	*x = GameParam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lowcode_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameParam) ProtoMessage() {}

func (x *GameParam) ProtoReflect() protoreflect.Message {
	mi := &file_lowcode_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameParam.ProtoReflect.Descriptor instead.
func (*GameParam) Descriptor() ([]byte, []int) {
	return file_lowcode_proto_rawDescGZIP(), []int{46}
}

func (x *GameParam) GetFirstComponent() string {
	if x != nil {
		return x.FirstComponent
	}
	return ""
}

func (x *GameParam) GetNextStepFirstComponent() string {
	if x != nil {
		return x.NextStepFirstComponent
	}
	return ""
}

func (x *GameParam) GetMapComponents() map[string]*anypb.Any {
	if x != nil {
		return x.MapComponents
	}
	return nil
}

func (x *GameParam) GetHistoryComponents() []string {
	if x != nil {
		return x.HistoryComponents
	}
	return nil
}

func (x *GameParam) GetRespinComponents() []string {
	if x != nil {
		return x.RespinComponents
	}
	return nil
}

func (x *GameParam) GetMapVals() map[int32]int32 {
	if x != nil {
		return x.MapVals
	}
	return nil
}

func (x *GameParam) GetMapStrVals() map[string]int32 {
	if x != nil {
		return x.MapStrVals
	}
	return nil
}

var File_lowcode_proto protoreflect.FileDescriptor

var file_lowcode_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x6c, 0x6f, 0x77, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x06, 0x73, 0x67, 0x63, 0x37, 0x70, 0x62, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0xeb, 0x02, 0x0a, 0x0d, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x64, 0x53, 0x63, 0x65, 0x6e,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0a, 0x75, 0x73, 0x65, 0x64, 0x53, 0x63,
	0x65, 0x6e, 0x65, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x75, 0x73, 0x65, 0x64, 0x4f, 0x74, 0x68, 0x65,
	0x72, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0f, 0x75,
	0x73, 0x65, 0x64, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x73, 0x12, 0x20,
	0x0a, 0x0b, 0x75, 0x73, 0x65, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x05, 0x52, 0x0b, 0x75, 0x73, 0x65, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73,
	0x12, 0x28, 0x0a, 0x0f, 0x75, 0x73, 0x65, 0x64, 0x50, 0x72, 0x69, 0x7a, 0x65, 0x53, 0x63, 0x65,
	0x6e, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0f, 0x75, 0x73, 0x65, 0x64, 0x50,
	0x72, 0x69, 0x7a, 0x65, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f,
	0x69, 0x6e, 0x57, 0x69, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x63, 0x6f, 0x69,
	0x6e, 0x57, 0x69, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x61, 0x73, 0x68, 0x57, 0x69, 0x6e, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x61, 0x73, 0x68, 0x57, 0x69, 0x6e, 0x12, 0x20,
	0x0a, 0x0b, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0b, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x53, 0x63, 0x65, 0x6e, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x72, 0x75, 0x6e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x72, 0x75, 0x6e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1c, 0x0a, 0x09,
	0x73, 0x72, 0x63, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x05, 0x52,
	0x09, 0x73, 0x72, 0x63, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x75,
	0x74, 0x70, 0x75, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x72, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x72, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x22, 0x5b, 0x0a, 0x12, 0x42, 0x61, 0x73, 0x69, 0x63, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65,
	0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x45, 0x0a, 0x12, 0x62, 0x61, 0x73, 0x69, 0x63, 0x43,
	0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x67, 0x63, 0x37, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x70,
	0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x12, 0x62, 0x61, 0x73, 0x69, 0x63,
	0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x22, 0x6d, 0x0a,
	0x0a, 0x42, 0x6f, 0x6f, 0x6b, 0x4f, 0x66, 0x44, 0x61, 0x74, 0x61, 0x12, 0x45, 0x0a, 0x12, 0x62,
	0x61, 0x73, 0x69, 0x63, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x67, 0x63, 0x37, 0x70, 0x62,
	0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x12,
	0x62, 0x61, 0x73, 0x69, 0x63, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x05, 0x52, 0x07, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x73, 0x22, 0x6e, 0x0a, 0x0b,
	0x42, 0x6f, 0x6f, 0x6b, 0x4f, 0x66, 0x32, 0x44, 0x61, 0x74, 0x61, 0x12, 0x45, 0x0a, 0x12, 0x62,
	0x61, 0x73, 0x69, 0x63, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x67, 0x63, 0x37, 0x70, 0x62,
	0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x12,
	0x62, 0x61, 0x73, 0x69, 0x63, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x05, 0x52, 0x07, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x73, 0x22, 0x45, 0x0a, 0x0d,
	0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x10, 0x0a,
	0x03, 0x76, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x76, 0x61, 0x6c, 0x12,
	0x22, 0x0a, 0x0c, 0x6e, 0x65, 0x77, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x6e, 0x65, 0x77, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x22, 0xbc, 0x01, 0x0a, 0x0d, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x6e, 0x69, 0x6e,
	0x67, 0x44, 0x61, 0x74, 0x61, 0x12, 0x45, 0x0a, 0x12, 0x62, 0x61, 0x73, 0x69, 0x63, 0x43, 0x6f,
	0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x73, 0x67, 0x63, 0x37, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f,
	0x6e, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x12, 0x62, 0x61, 0x73, 0x69, 0x63, 0x43,
	0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09,
	0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x09, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x76, 0x61,
	0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x76, 0x61, 0x6c, 0x12, 0x10, 0x0a, 0x03,
	0x6d, 0x75, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6d, 0x75, 0x6c, 0x12, 0x22,
	0x0a, 0x0c, 0x6e, 0x65, 0x77, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x6e, 0x65, 0x77, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x22, 0xa2, 0x01, 0x0a, 0x15, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x4d, 0x79, 0x73, 0x74, 0x65, 0x72, 0x79, 0x44, 0x61, 0x74, 0x61, 0x12, 0x45, 0x0a, 0x12,
	0x62, 0x61, 0x73, 0x69, 0x63, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x44, 0x61,
	0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x67, 0x63, 0x37, 0x70,
	0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x12, 0x62, 0x61, 0x73, 0x69, 0x63, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x63, 0x75, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12,
	0x26, 0x0a, 0x0e, 0x63, 0x75, 0x72, 0x4d, 0x79, 0x73, 0x74, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x64,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x63, 0x75, 0x72, 0x4d, 0x79, 0x73, 0x74,
	0x65, 0x72, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x78, 0x0a, 0x13, 0x4d, 0x75, 0x6c, 0x74, 0x69,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x65, 0x65, 0x6c, 0x73, 0x44, 0x61, 0x74, 0x61, 0x12, 0x45,
	0x0a, 0x12, 0x62, 0x61, 0x73, 0x69, 0x63, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x67, 0x63,
	0x37, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x12, 0x62, 0x61, 0x73, 0x69, 0x63, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x63, 0x75, 0x72, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x22, 0x7c, 0x0a, 0x0b, 0x4d, 0x79, 0x73, 0x74, 0x65, 0x72, 0x79, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x45, 0x0a, 0x12, 0x62, 0x61, 0x73, 0x69, 0x63, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65,
	0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73,
	0x67, 0x63, 0x37, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x12, 0x62, 0x61, 0x73, 0x69, 0x63, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e,
	0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x75, 0x72, 0x4d, 0x79,
	0x73, 0x74, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0e, 0x63, 0x75, 0x72, 0x4d, 0x79, 0x73, 0x74, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x22,
	0x76, 0x0a, 0x11, 0x4f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x45, 0x0a, 0x12, 0x62, 0x61, 0x73, 0x69, 0x63, 0x43, 0x6f, 0x6d,
	0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x73, 0x67, 0x63, 0x37, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e,
	0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x12, 0x62, 0x61, 0x73, 0x69, 0x63, 0x43, 0x6f,
	0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x63,
	0x75, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x63,
	0x75, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x22, 0x7c, 0x0a, 0x0d, 0x42, 0x61, 0x73, 0x69, 0x63,
	0x57, 0x69, 0x6e, 0x73, 0x44, 0x61, 0x74, 0x61, 0x12, 0x45, 0x0a, 0x12, 0x62, 0x61, 0x73, 0x69,
	0x63, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x67, 0x63, 0x37, 0x70, 0x62, 0x2e, 0x43, 0x6f,
	0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x12, 0x62, 0x61, 0x73,
	0x69, 0x63, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x24, 0x0a, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x43, 0x6f, 0x6d, 0x70,
	0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x22, 0x83, 0x01, 0x0a, 0x12, 0x52, 0x65, 0x65, 0x6c, 0x53, 0x65,
	0x74, 0x4d, 0x79, 0x73, 0x74, 0x65, 0x72, 0x79, 0x44, 0x61, 0x74, 0x61, 0x12, 0x45, 0x0a, 0x12,
	0x62, 0x61, 0x73, 0x69, 0x63, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x44, 0x61,
	0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x67, 0x63, 0x37, 0x70,
	0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x12, 0x62, 0x61, 0x73, 0x69, 0x63, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x26, 0x0a, 0x0e, 0x43, 0x75, 0x72, 0x4d, 0x79, 0x73, 0x74, 0x65, 0x72,
	0x79, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x43, 0x75, 0x72,
	0x4d, 0x79, 0x73, 0x74, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x7e, 0x0a, 0x19, 0x4d,
	0x75, 0x6c, 0x74, 0x69, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65,
	0x52, 0x65, 0x65, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x12, 0x45, 0x0a, 0x12, 0x62, 0x61, 0x73, 0x69,
	0x63, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x67, 0x63, 0x37, 0x70, 0x62, 0x2e, 0x43, 0x6f,
	0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x12, 0x62, 0x61, 0x73,
	0x69, 0x63, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x1a, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x63, 0x75, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x22, 0xeb, 0x03, 0x0a, 0x0a,
	0x52, 0x65, 0x73, 0x70, 0x69, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x45, 0x0a, 0x12, 0x62, 0x61,
	0x73, 0x69, 0x63, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x67, 0x63, 0x37, 0x70, 0x62, 0x2e,
	0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x12, 0x62,
	0x61, 0x73, 0x69, 0x63, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x24, 0x0a, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x69, 0x6e, 0x4e,
	0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x69, 0x6e, 0x4e, 0x75, 0x6d, 0x12, 0x2a, 0x0a, 0x0e, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x52, 0x65, 0x73, 0x70, 0x69, 0x6e, 0x4e, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x42,
	0x02, 0x18, 0x01, 0x52, 0x0e, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x69, 0x6e,
	0x4e, 0x75, 0x6d, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x75, 0x72, 0x52, 0x65, 0x73, 0x70, 0x69, 0x6e,
	0x4e, 0x75, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x63, 0x75, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x69, 0x6e, 0x4e, 0x75, 0x6d, 0x12, 0x28, 0x0a, 0x0f, 0x63, 0x75, 0x72, 0x41, 0x64,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x69, 0x6e, 0x4e, 0x75, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0f, 0x63, 0x75, 0x72, 0x41, 0x64, 0x64, 0x52, 0x65, 0x73, 0x70, 0x69, 0x6e, 0x4e, 0x75,
	0x6d, 0x12, 0x22, 0x0a, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x69, 0x6e, 0x57, 0x69,
	0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f,
	0x69, 0x6e, 0x57, 0x69, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x61,
	0x73, 0x68, 0x57, 0x69, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x43, 0x61, 0x73, 0x68, 0x57, 0x69, 0x6e, 0x12, 0x34, 0x0a, 0x15, 0x72, 0x65, 0x74,
	0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x41, 0x64, 0x64, 0x52, 0x65, 0x73, 0x70, 0x69, 0x6e, 0x4e,
	0x75, 0x6d, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x15, 0x72, 0x65, 0x74, 0x72, 0x69, 0x67,
	0x67, 0x65, 0x72, 0x41, 0x64, 0x64, 0x52, 0x65, 0x73, 0x70, 0x69, 0x6e, 0x4e, 0x75, 0x6d, 0x12,
	0x26, 0x0a, 0x0e, 0x6c, 0x61, 0x73, 0x74, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x4e, 0x75,
	0x6d, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x6c, 0x61, 0x73, 0x74, 0x54, 0x72, 0x69,
	0x67, 0x67, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x75, 0x72, 0x54, 0x72,
	0x69, 0x67, 0x67, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d,
	0x63, 0x75, 0x72, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x12, 0x2a, 0x0a,
	0x10, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x69, 0x6e, 0x4e, 0x75,
	0x6d, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x05, 0x52, 0x10, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x69, 0x6e, 0x4e, 0x75, 0x6d, 0x22, 0xc0, 0x03, 0x0a, 0x0b, 0x52, 0x65,
	0x73, 0x70, 0x69, 0x6e, 0x32, 0x44, 0x61, 0x74, 0x61, 0x12, 0x45, 0x0a, 0x12, 0x62, 0x61, 0x73,
	0x69, 0x63, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x67, 0x63, 0x37, 0x70, 0x62, 0x2e, 0x43,
	0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x12, 0x62, 0x61,
	0x73, 0x69, 0x63, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x24, 0x0a, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x69, 0x6e, 0x4e, 0x75,
	0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x69, 0x6e, 0x4e, 0x75, 0x6d, 0x12, 0x2a, 0x0a, 0x0e, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x52,
	0x65, 0x73, 0x70, 0x69, 0x6e, 0x4e, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x42, 0x02,
	0x18, 0x01, 0x52, 0x0e, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x69, 0x6e, 0x4e,
	0x75, 0x6d, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x75, 0x72, 0x52, 0x65, 0x73, 0x70, 0x69, 0x6e, 0x4e,
	0x75, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x63, 0x75, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x69, 0x6e, 0x4e, 0x75, 0x6d, 0x12, 0x28, 0x0a, 0x0f, 0x63, 0x75, 0x72, 0x41, 0x64, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x69, 0x6e, 0x4e, 0x75, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0f, 0x63, 0x75, 0x72, 0x41, 0x64, 0x64, 0x52, 0x65, 0x73, 0x70, 0x69, 0x6e, 0x4e, 0x75, 0x6d,
	0x12, 0x22, 0x0a, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x69, 0x6e, 0x57, 0x69, 0x6e,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x69,
	0x6e, 0x57, 0x69, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x61, 0x73,
	0x68, 0x57, 0x69, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x43, 0x61, 0x73, 0x68, 0x57, 0x69, 0x6e, 0x12, 0x34, 0x0a, 0x15, 0x72, 0x65, 0x74, 0x72,
	0x69, 0x67, 0x67, 0x65, 0x72, 0x41, 0x64, 0x64, 0x52, 0x65, 0x73, 0x70, 0x69, 0x6e, 0x4e, 0x75,
	0x6d, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x15, 0x72, 0x65, 0x74, 0x72, 0x69, 0x67, 0x67,
	0x65, 0x72, 0x41, 0x64, 0x64, 0x52, 0x65, 0x73, 0x70, 0x69, 0x6e, 0x4e, 0x75, 0x6d, 0x12, 0x26,
	0x0a, 0x0e, 0x6c, 0x61, 0x73, 0x74, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x4e, 0x75, 0x6d,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x6c, 0x61, 0x73, 0x74, 0x54, 0x72, 0x69, 0x67,
	0x67, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x75, 0x72, 0x54, 0x72, 0x69,
	0x67, 0x67, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x63,
	0x75, 0x72, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x22, 0xad, 0x01, 0x0a,
	0x08, 0x4d, 0x61, 0x73, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x12, 0x45, 0x0a, 0x12, 0x62, 0x61, 0x73,
	0x69, 0x63, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x67, 0x63, 0x37, 0x70, 0x62, 0x2e, 0x43,
	0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x12, 0x62, 0x61,
	0x73, 0x69, 0x63, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x10, 0x0a, 0x03, 0x6e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6e,
	0x75, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x76, 0x61, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x08,
	0x52, 0x04, 0x76, 0x61, 0x6c, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x65, 0x77, 0x43, 0x68, 0x67,
	0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6e, 0x65, 0x77, 0x43, 0x68, 0x67,
	0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x65, 0x77, 0x56, 0x61, 0x6c, 0x73, 0x18, 0x05, 0x20,
	0x03, 0x28, 0x08, 0x52, 0x07, 0x6e, 0x65, 0x77, 0x56, 0x61, 0x6c, 0x73, 0x22, 0xc7, 0x01, 0x0a,
	0x14, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x45, 0x0a, 0x12, 0x62, 0x61, 0x73, 0x69, 0x63, 0x43, 0x6f,
	0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x73, 0x67, 0x63, 0x37, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f,
	0x6e, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x12, 0x62, 0x61, 0x73, 0x69, 0x63, 0x43,
	0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x20, 0x0a, 0x0b,
	0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x05, 0x52, 0x0b, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x22,
	0x0a, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x69, 0x6e, 0x57, 0x69, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x69, 0x6e, 0x57,
	0x69, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x61, 0x73, 0x68, 0x57,
	0x69, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43,
	0x61, 0x73, 0x68, 0x57, 0x69, 0x6e, 0x22, 0xea, 0x01, 0x0a, 0x11, 0x53, 0x79, 0x6d, 0x62, 0x6f,
	0x6c, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x45, 0x0a, 0x12,
	0x62, 0x61, 0x73, 0x69, 0x63, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x44, 0x61,
	0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x67, 0x63, 0x37, 0x70,
	0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x12, 0x62, 0x61, 0x73, 0x69, 0x63, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x24, 0x0a, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6f,
	0x6e, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74,
	0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x79, 0x6d,
	0x62, 0x6f, 0x6c, 0x4e, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x73, 0x79,
	0x6d, 0x62, 0x6f, 0x6c, 0x4e, 0x75, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x77, 0x69, 0x6c, 0x64, 0x4e,
	0x75, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x77, 0x69, 0x6c, 0x64, 0x4e, 0x75,
	0x6d, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x73, 0x70, 0x69, 0x6e, 0x4e, 0x75, 0x6d, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x72, 0x65, 0x73, 0x70, 0x69, 0x6e, 0x4e, 0x75, 0x6d, 0x12,
	0x12, 0x0a, 0x04, 0x77, 0x69, 0x6e, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x77,
	0x69, 0x6e, 0x73, 0x22, 0x76, 0x0a, 0x15, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x57, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x41, 0x77, 0x61, 0x72, 0x64, 0x73, 0x44, 0x61, 0x74, 0x61, 0x12, 0x45, 0x0a, 0x12,
	0x62, 0x61, 0x73, 0x69, 0x63, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x44, 0x61,
	0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x67, 0x63, 0x37, 0x70,
	0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x12, 0x62, 0x61, 0x73, 0x69, 0x63, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x48, 0x61, 0x73, 0x47, 0x6f, 0x74, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x08, 0x52, 0x06, 0x48, 0x61, 0x73, 0x47, 0x6f, 0x74, 0x22, 0xb0, 0x01, 0x0a, 0x11,
	0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x57, 0x69, 0x6e, 0x73, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x45, 0x0a, 0x12, 0x62, 0x61, 0x73, 0x69, 0x63, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e,
	0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x73, 0x67, 0x63, 0x37, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x12, 0x62, 0x61, 0x73, 0x69, 0x63, 0x43, 0x6f, 0x6d, 0x70, 0x6f,
	0x6e, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x77, 0x69, 0x6e, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x77, 0x69, 0x6e, 0x73, 0x12, 0x1c, 0x0a, 0x09,
	0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x4e, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x09, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x4e, 0x75, 0x6d, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x4e, 0x75, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0c, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x4e, 0x75, 0x6d, 0x22, 0x7c,
	0x0a, 0x0f, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x52, 0x65, 0x65, 0x6c, 0x73, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x45, 0x0a, 0x12, 0x62, 0x61, 0x73, 0x69, 0x63, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e,
	0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x73, 0x67, 0x63, 0x37, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x12, 0x62, 0x61, 0x73, 0x69, 0x63, 0x43, 0x6f, 0x6d, 0x70, 0x6f,
	0x6e, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x65, 0x6c,
	0x53, 0x65, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c,
	0x72, 0x65, 0x65, 0x6c, 0x53, 0x65, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x87, 0x02, 0x0a,
	0x12, 0x53, 0x63, 0x61, 0x74, 0x74, 0x65, 0x72, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x45, 0x0a, 0x12, 0x62, 0x61, 0x73, 0x69, 0x63, 0x43, 0x6f, 0x6d, 0x70,
	0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x73, 0x67, 0x63, 0x37, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65,
	0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x12, 0x62, 0x61, 0x73, 0x69, 0x63, 0x43, 0x6f, 0x6d,
	0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x24, 0x0a, 0x0d, 0x6e, 0x65,
	0x78, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x4e, 0x75, 0x6d, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x4e, 0x75, 0x6d, 0x12, 0x18,
	0x0a, 0x07, 0x77, 0x69, 0x6c, 0x64, 0x4e, 0x75, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x77, 0x69, 0x6c, 0x64, 0x4e, 0x75, 0x6d, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x73, 0x70,
	0x69, 0x6e, 0x4e, 0x75, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x72, 0x65, 0x73,
	0x70, 0x69, 0x6e, 0x4e, 0x75, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x77, 0x69, 0x6e, 0x73, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x77, 0x69, 0x6e, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x77, 0x69,
	0x6e, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x77, 0x69,
	0x6e, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x22, 0x85, 0x02, 0x0a, 0x10, 0x4c, 0x69, 0x6e, 0x65, 0x73,
	0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x45, 0x0a, 0x12, 0x62,
	0x61, 0x73, 0x69, 0x63, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x67, 0x63, 0x37, 0x70, 0x62,
	0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x12,
	0x62, 0x61, 0x73, 0x69, 0x63, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x24, 0x0a, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e,
	0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x43,
	0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x79, 0x6d, 0x62,
	0x6f, 0x6c, 0x4e, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x73, 0x79, 0x6d,
	0x62, 0x6f, 0x6c, 0x4e, 0x75, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x77, 0x69, 0x6c, 0x64, 0x4e, 0x75,
	0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x77, 0x69, 0x6c, 0x64, 0x4e, 0x75, 0x6d,
	0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x73, 0x70, 0x69, 0x6e, 0x4e, 0x75, 0x6d, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x72, 0x65, 0x73, 0x70, 0x69, 0x6e, 0x4e, 0x75, 0x6d, 0x12, 0x12,
	0x0a, 0x04, 0x77, 0x69, 0x6e, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x77, 0x69,
	0x6e, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x77, 0x69, 0x6e, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x77, 0x69, 0x6e, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x22, 0x84,
	0x02, 0x0a, 0x0f, 0x57, 0x61, 0x79, 0x73, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x45, 0x0a, 0x12, 0x62, 0x61, 0x73, 0x69, 0x63, 0x43, 0x6f, 0x6d, 0x70, 0x6f,
	0x6e, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x73, 0x67, 0x63, 0x37, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x12, 0x62, 0x61, 0x73, 0x69, 0x63, 0x43, 0x6f, 0x6d, 0x70,
	0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x24, 0x0a, 0x0d, 0x6e, 0x65, 0x78,
	0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x12,
	0x1c, 0x0a, 0x09, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x4e, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x4e, 0x75, 0x6d, 0x12, 0x18, 0x0a,
	0x07, 0x77, 0x69, 0x6c, 0x64, 0x4e, 0x75, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x77, 0x69, 0x6c, 0x64, 0x4e, 0x75, 0x6d, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x73, 0x70, 0x69,
	0x6e, 0x4e, 0x75, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x72, 0x65, 0x73, 0x70,
	0x69, 0x6e, 0x4e, 0x75, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x77, 0x69, 0x6e, 0x73, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x77, 0x69, 0x6e, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x77, 0x69, 0x6e,
	0x4d, 0x75, 0x6c, 0x74, 0x69, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x77, 0x69, 0x6e,
	0x4d, 0x75, 0x6c, 0x74, 0x69, 0x22, 0x87, 0x02, 0x0a, 0x12, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65,
	0x72, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x45, 0x0a, 0x12,
	0x62, 0x61, 0x73, 0x69, 0x63, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x44, 0x61,
	0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x67, 0x63, 0x37, 0x70,
	0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x12, 0x62, 0x61, 0x73, 0x69, 0x63, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x24, 0x0a, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6f,
	0x6e, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74,
	0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x79, 0x6d,
	0x62, 0x6f, 0x6c, 0x4e, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x73, 0x79,
	0x6d, 0x62, 0x6f, 0x6c, 0x4e, 0x75, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x77, 0x69, 0x6c, 0x64, 0x4e,
	0x75, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x77, 0x69, 0x6c, 0x64, 0x4e, 0x75,
	0x6d, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x73, 0x70, 0x69, 0x6e, 0x4e, 0x75, 0x6d, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x72, 0x65, 0x73, 0x70, 0x69, 0x6e, 0x4e, 0x75, 0x6d, 0x12,
	0x12, 0x0a, 0x04, 0x77, 0x69, 0x6e, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x77,
	0x69, 0x6e, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x77, 0x69, 0x6e, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x77, 0x69, 0x6e, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x22,
	0x8b, 0x01, 0x0a, 0x12, 0x57, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x4d, 0x75, 0x6c,
	0x74, 0x69, 0x44, 0x61, 0x74, 0x61, 0x12, 0x45, 0x0a, 0x12, 0x62, 0x61, 0x73, 0x69, 0x63, 0x43,
	0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x67, 0x63, 0x37, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x70,
	0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x12, 0x62, 0x61, 0x73, 0x69, 0x63,
	0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a,
	0x04, 0x77, 0x69, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x77, 0x69, 0x6e,
	0x73, 0x12, 0x1a, 0x0a, 0x08, 0x77, 0x69, 0x6e, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x77, 0x69, 0x6e, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x22, 0x75, 0x0a,
	0x10, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x41, 0x77, 0x61, 0x72, 0x64, 0x73, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x45, 0x0a, 0x12, 0x62, 0x61, 0x73, 0x69, 0x63, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e,
	0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x73, 0x67, 0x63, 0x37, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x12, 0x62, 0x61, 0x73, 0x69, 0x63, 0x43, 0x6f, 0x6d, 0x70, 0x6f,
	0x6e, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x67, 0x6f, 0x74, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x03, 0x28, 0x05, 0x52, 0x08, 0x67, 0x6f, 0x74, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x22, 0x7a, 0x0a, 0x11, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x53, 0x79,
	0x6d, 0x62, 0x6f, 0x6c, 0x73, 0x44, 0x61, 0x74, 0x61, 0x12, 0x45, 0x0a, 0x12, 0x62, 0x61, 0x73,
	0x69, 0x63, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x67, 0x63, 0x37, 0x70, 0x62, 0x2e, 0x43,
	0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x12, 0x62, 0x61,
	0x73, 0x69, 0x63, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x4e, 0x75, 0x6d, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x4e, 0x75, 0x6d,
	0x22, 0x6f, 0x0a, 0x10, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x45, 0x0a, 0x12, 0x62, 0x61, 0x73, 0x69, 0x63, 0x43, 0x6f, 0x6d,
	0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x73, 0x67, 0x63, 0x37, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e,
	0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x12, 0x62, 0x61, 0x73, 0x69, 0x63, 0x43, 0x6f,
	0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x22, 0x79, 0x0a, 0x0e, 0x52, 0x6f, 0x6c, 0x6c, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x45, 0x0a, 0x12, 0x62, 0x61, 0x73, 0x69, 0x63, 0x43, 0x6f, 0x6d, 0x70,
	0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x73, 0x67, 0x63, 0x37, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65,
	0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x12, 0x62, 0x61, 0x73, 0x69, 0x63, 0x43, 0x6f, 0x6d,
	0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x79,
	0x6d, 0x62, 0x6f, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x05, 0x52,
	0x0b, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x22, 0x6e, 0x0a, 0x0f,
	0x51, 0x75, 0x65, 0x75, 0x65, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x45, 0x0a, 0x12, 0x62, 0x61, 0x73, 0x69, 0x63, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x67,
	0x63, 0x37, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x12, 0x62, 0x61, 0x73, 0x69, 0x63, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65,
	0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x71, 0x75, 0x65, 0x75, 0x65, 0x22, 0x80, 0x01, 0x0a,
	0x15, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x32, 0x44, 0x61, 0x74, 0x61, 0x12, 0x45, 0x0a, 0x12, 0x62, 0x61, 0x73, 0x69, 0x63, 0x43,
	0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x67, 0x63, 0x37, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x70,
	0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x12, 0x62, 0x61, 0x73, 0x69, 0x63,
	0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x20, 0x0a,
	0x0b, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x05, 0x52, 0x0b, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x22,
	0xa6, 0x01, 0x0a, 0x0d, 0x50, 0x69, 0x67, 0x67, 0x79, 0x42, 0x61, 0x6e, 0x6b, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x45, 0x0a, 0x12, 0x62, 0x61, 0x73, 0x69, 0x63, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e,
	0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x73, 0x67, 0x63, 0x37, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x12, 0x62, 0x61, 0x73, 0x69, 0x63, 0x43, 0x6f, 0x6d, 0x70, 0x6f,
	0x6e, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x77, 0x69, 0x6e, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x77, 0x69, 0x6e, 0x73, 0x12, 0x1a, 0x0a, 0x08,
	0x77, 0x69, 0x6e, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x77, 0x69, 0x6e, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x61, 0x76, 0x65,
	0x64, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x61,
	0x76, 0x65, 0x64, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x22, 0xaf, 0x01, 0x0a, 0x12, 0x57, 0x69, 0x6e,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x43, 0x61, 0x63, 0x68, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x45, 0x0a, 0x12, 0x62, 0x61, 0x73, 0x69, 0x63, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x67,
	0x63, 0x37, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x12, 0x62, 0x61, 0x73, 0x69, 0x63, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65,
	0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x77, 0x69, 0x6e, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x77, 0x69, 0x6e, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x77, 0x69,
	0x6e, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x77, 0x69,
	0x6e, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x12, 0x22, 0x0a, 0x0c, 0x77, 0x69, 0x6e, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x4e, 0x75, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x77, 0x69,
	0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x4e, 0x75, 0x6d, 0x22, 0x71, 0x0a, 0x16, 0x50, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x45, 0x0a, 0x12, 0x62, 0x61, 0x73, 0x69, 0x63, 0x43, 0x6f, 0x6d,
	0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x73, 0x67, 0x63, 0x37, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e,
	0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x12, 0x62, 0x61, 0x73, 0x69, 0x63, 0x43, 0x6f,
	0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x10, 0x0a, 0x03, 0x70,
	0x6f, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x05, 0x52, 0x03, 0x70, 0x6f, 0x73, 0x22, 0x6f, 0x0a,
	0x0e, 0x52, 0x6f, 0x6c, 0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x45, 0x0a, 0x12, 0x62, 0x61, 0x73, 0x69, 0x63, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x67,
	0x63, 0x37, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x12, 0x62, 0x61, 0x73, 0x69, 0x63, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65,
	0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x6c,
	0x0a, 0x11, 0x47, 0x65, 0x6e, 0x47, 0x69, 0x67, 0x61, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x45, 0x0a, 0x12, 0x62, 0x61, 0x73, 0x69, 0x63, 0x43, 0x6f, 0x6d, 0x70,
	0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x73, 0x67, 0x63, 0x37, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65,
	0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x12, 0x62, 0x61, 0x73, 0x69, 0x63, 0x43, 0x6f, 0x6d,
	0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x6f,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x05, 0x52, 0x03, 0x70, 0x6f, 0x73, 0x22, 0x69, 0x0a, 0x0e,
	0x4d, 0x6f, 0x76, 0x65, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x12, 0x45,
	0x0a, 0x12, 0x62, 0x61, 0x73, 0x69, 0x63, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x67, 0x63,
	0x37, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x12, 0x62, 0x61, 0x73, 0x69, 0x63, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x6f, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x05, 0x52, 0x03, 0x70, 0x6f, 0x73, 0x22, 0x6b, 0x0a, 0x10, 0x43, 0x61, 0x74, 0x63, 0x68,
	0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x73, 0x44, 0x61, 0x74, 0x61, 0x12, 0x45, 0x0a, 0x12, 0x62,
	0x61, 0x73, 0x69, 0x63, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x67, 0x63, 0x37, 0x70, 0x62,
	0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x12,
	0x62, 0x61, 0x73, 0x69, 0x63, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x6f, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x05, 0x52,
	0x03, 0x70, 0x6f, 0x73, 0x22, 0x6b, 0x0a, 0x10, 0x42, 0x75, 0x72, 0x73, 0x74, 0x53, 0x79, 0x6d,
	0x62, 0x6f, 0x6c, 0x73, 0x44, 0x61, 0x74, 0x61, 0x12, 0x45, 0x0a, 0x12, 0x62, 0x61, 0x73, 0x69,
	0x63, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x67, 0x63, 0x37, 0x70, 0x62, 0x2e, 0x43, 0x6f,
	0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x12, 0x62, 0x61, 0x73,
	0x69, 0x63, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x10, 0x0a, 0x03, 0x70, 0x6f, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x05, 0x52, 0x03, 0x70, 0x6f,
	0x73, 0x22, 0x8e, 0x01, 0x0a, 0x15, 0x57, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x4d,
	0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x45, 0x0a, 0x12, 0x62,
	0x61, 0x73, 0x69, 0x63, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x67, 0x63, 0x37, 0x70, 0x62,
	0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x12,
	0x62, 0x61, 0x73, 0x69, 0x63, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x77, 0x69, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x77, 0x69, 0x6e, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x77, 0x69, 0x6e, 0x4d, 0x75, 0x6c,
	0x74, 0x69, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x77, 0x69, 0x6e, 0x4d, 0x75, 0x6c,
	0x74, 0x69, 0x22, 0xac, 0x01, 0x0a, 0x0f, 0x52, 0x65, 0x65, 0x6c, 0x54, 0x72, 0x69, 0x67, 0x67,
	0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x45, 0x0a, 0x12, 0x62, 0x61, 0x73, 0x69, 0x63, 0x43,
	0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x67, 0x63, 0x37, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x70,
	0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x12, 0x62, 0x61, 0x73, 0x69, 0x63,
	0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x24, 0x0a,
	0x0d, 0x6e, 0x65, 0x78, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e,
	0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x61, 0x73, 0x6b, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x08, 0x52, 0x05, 0x6d, 0x61, 0x73, 0x6b, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x22, 0x84, 0x01, 0x0a, 0x0b, 0x4a, 0x61, 0x63, 0x6b, 0x70, 0x6f, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x45, 0x0a, 0x12, 0x62, 0x61, 0x73, 0x69, 0x63, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e,
	0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x73, 0x67, 0x63, 0x37, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x12, 0x62, 0x61, 0x73, 0x69, 0x63, 0x43, 0x6f, 0x6d, 0x70, 0x6f,
	0x6e, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x77, 0x69, 0x6e, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x77, 0x69, 0x6e, 0x73, 0x12, 0x1a, 0x0a, 0x08,
	0x77, 0x69, 0x6e, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x77, 0x69, 0x6e, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x22, 0x73, 0x0a, 0x0c, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x56, 0x61, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x12, 0x45, 0x0a, 0x12, 0x62, 0x61, 0x73, 0x69,
	0x63, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x67, 0x63, 0x37, 0x70, 0x62, 0x2e, 0x43, 0x6f,
	0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x12, 0x62, 0x61, 0x73,
	0x69, 0x63, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x1c, 0x0a, 0x09, 0x69, 0x73, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x22, 0x75, 0x0a,
	0x0e, 0x41, 0x64, 0x64, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x73, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x45, 0x0a, 0x12, 0x62, 0x61, 0x73, 0x69, 0x63, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x67,
	0x63, 0x37, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x12, 0x62, 0x61, 0x73, 0x69, 0x63, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65,
	0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c,
	0x4e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x73, 0x79, 0x6d, 0x62, 0x6f,
	0x6c, 0x4e, 0x75, 0x6d, 0x22, 0x8b, 0x02, 0x0a, 0x16, 0x41, 0x64, 0x6a, 0x61, 0x63, 0x65, 0x6e,
	0x74, 0x50, 0x61, 0x79, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x45, 0x0a, 0x12, 0x62, 0x61, 0x73, 0x69, 0x63, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x67,
	0x63, 0x37, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x12, 0x62, 0x61, 0x73, 0x69, 0x63, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65,
	0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x24, 0x0a, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x43, 0x6f,
	0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e,
	0x65, 0x78, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x4e, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x09, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x4e, 0x75, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x77, 0x69,
	0x6c, 0x64, 0x4e, 0x75, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x77, 0x69, 0x6c,
	0x64, 0x4e, 0x75, 0x6d, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x73, 0x70, 0x69, 0x6e, 0x4e, 0x75,
	0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x72, 0x65, 0x73, 0x70, 0x69, 0x6e, 0x4e,
	0x75, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x77, 0x69, 0x6e, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x77, 0x69, 0x6e, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x77, 0x69, 0x6e, 0x4d, 0x75, 0x6c,
	0x74, 0x69, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x77, 0x69, 0x6e, 0x4d, 0x75, 0x6c,
	0x74, 0x69, 0x22, 0xe1, 0x04, 0x0a, 0x09, 0x47, 0x61, 0x6d, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x12, 0x26, 0x0a, 0x0e, 0x66, 0x69, 0x72, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x66, 0x69, 0x72, 0x73, 0x74, 0x43,
	0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x12, 0x36, 0x0a, 0x16, 0x6e, 0x65, 0x78, 0x74,
	0x53, 0x74, 0x65, 0x70, 0x46, 0x69, 0x72, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x6e, 0x65, 0x78, 0x74, 0x53, 0x74,
	0x65, 0x70, 0x46, 0x69, 0x72, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74,
	0x12, 0x4a, 0x0a, 0x0d, 0x6d, 0x61, 0x70, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x73, 0x67, 0x63, 0x37, 0x70, 0x62,
	0x2e, 0x47, 0x61, 0x6d, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x2e, 0x4d, 0x61, 0x70, 0x43, 0x6f,
	0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0d, 0x6d,
	0x61, 0x70, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x2c, 0x0a, 0x11,
	0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74,
	0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x11, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79,
	0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x2a, 0x0a, 0x10, 0x72, 0x65,
	0x73, 0x70, 0x69, 0x6e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x05,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x10, 0x72, 0x65, 0x73, 0x70, 0x69, 0x6e, 0x43, 0x6f, 0x6d, 0x70,
	0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x38, 0x0a, 0x07, 0x6d, 0x61, 0x70, 0x56, 0x61, 0x6c,
	0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x73, 0x67, 0x63, 0x37, 0x70, 0x62,
	0x2e, 0x47, 0x61, 0x6d, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x2e, 0x4d, 0x61, 0x70, 0x56, 0x61,
	0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x6d, 0x61, 0x70, 0x56, 0x61, 0x6c, 0x73,
	0x12, 0x41, 0x0a, 0x0a, 0x6d, 0x61, 0x70, 0x53, 0x74, 0x72, 0x56, 0x61, 0x6c, 0x73, 0x18, 0x07,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x73, 0x67, 0x63, 0x37, 0x70, 0x62, 0x2e, 0x47, 0x61,
	0x6d, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x2e, 0x4d, 0x61, 0x70, 0x53, 0x74, 0x72, 0x56, 0x61,
	0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x6d, 0x61, 0x70, 0x53, 0x74, 0x72, 0x56,
	0x61, 0x6c, 0x73, 0x1a, 0x56, 0x0a, 0x12, 0x4d, 0x61, 0x70, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e,
	0x65, 0x6e, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2a, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x3a, 0x0a, 0x0c, 0x4d,
	0x61, 0x70, 0x56, 0x61, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x3d, 0x0a, 0x0f, 0x4d, 0x61, 0x70, 0x53, 0x74,
	0x72, 0x56, 0x61, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x42, 0x29, 0x5a, 0x27, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x7a, 0x68, 0x73, 0x30, 0x30, 0x37, 0x2f, 0x73, 0x6c, 0x6f, 0x74,
	0x73, 0x67, 0x61, 0x6d, 0x65, 0x63, 0x6f, 0x72, 0x65, 0x37, 0x2f, 0x73, 0x67, 0x63, 0x37, 0x70,
	0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_lowcode_proto_rawDescOnce sync.Once
	file_lowcode_proto_rawDescData = file_lowcode_proto_rawDesc
)

func file_lowcode_proto_rawDescGZIP() []byte {
	file_lowcode_proto_rawDescOnce.Do(func() {
		file_lowcode_proto_rawDescData = protoimpl.X.CompressGZIP(file_lowcode_proto_rawDescData)
	})
	return file_lowcode_proto_rawDescData
}

var file_lowcode_proto_msgTypes = make([]protoimpl.MessageInfo, 50)
var file_lowcode_proto_goTypes = []any{
	(*ComponentData)(nil),             // 0: sgc7pb.ComponentData
	(*BasicComponentData)(nil),        // 1: sgc7pb.BasicComponentData
	(*BookOfData)(nil),                // 2: sgc7pb.BookOfData
	(*BookOf2Data)(nil),               // 3: sgc7pb.BookOf2Data
	(*CollectorData)(nil),             // 4: sgc7pb.CollectorData
	(*LightningData)(nil),             // 5: sgc7pb.LightningData
	(*MultiLevelMysteryData)(nil),     // 6: sgc7pb.MultiLevelMysteryData
	(*MultiLevelReelsData)(nil),       // 7: sgc7pb.MultiLevelReelsData
	(*MysteryData)(nil),               // 8: sgc7pb.MysteryData
	(*OverlaySymbolData)(nil),         // 9: sgc7pb.OverlaySymbolData
	(*BasicWinsData)(nil),             // 10: sgc7pb.BasicWinsData
	(*ReelSetMysteryData)(nil),        // 11: sgc7pb.ReelSetMysteryData
	(*MultiLevelReplaceReelData)(nil), // 12: sgc7pb.MultiLevelReplaceReelData
	(*RespinData)(nil),                // 13: sgc7pb.RespinData
	(*Respin2Data)(nil),               // 14: sgc7pb.Respin2Data
	(*MaskData)(nil),                  // 15: sgc7pb.MaskData
	(*SymbolCollectionData)(nil),      // 16: sgc7pb.SymbolCollectionData
	(*SymbolTriggerData)(nil),         // 17: sgc7pb.SymbolTriggerData
	(*MultiWeightAwardsData)(nil),     // 18: sgc7pb.MultiWeightAwardsData
	(*SymbolValWinsData)(nil),         // 19: sgc7pb.SymbolValWinsData
	(*WeightReelsData)(nil),           // 20: sgc7pb.WeightReelsData
	(*ScatterTriggerData)(nil),        // 21: sgc7pb.ScatterTriggerData
	(*LinesTriggerData)(nil),          // 22: sgc7pb.LinesTriggerData
	(*WaysTriggerData)(nil),           // 23: sgc7pb.WaysTriggerData
	(*ClusterTriggerData)(nil),        // 24: sgc7pb.ClusterTriggerData
	(*WinResultMultiData)(nil),        // 25: sgc7pb.WinResultMultiData
	(*WeightAwardsData)(nil),          // 26: sgc7pb.WeightAwardsData
	(*RemoveSymbolsData)(nil),         // 27: sgc7pb.RemoveSymbolsData
	(*WeightBranchData)(nil),          // 28: sgc7pb.WeightBranchData
	(*RollSymbolData)(nil),            // 29: sgc7pb.RollSymbolData
	(*QueueBranchData)(nil),           // 30: sgc7pb.QueueBranchData
	(*SymbolCollection2Data)(nil),     // 31: sgc7pb.SymbolCollection2Data
	(*PiggyBankData)(nil),             // 32: sgc7pb.PiggyBankData
	(*WinResultCacheData)(nil),        // 33: sgc7pb.WinResultCacheData
	(*PositionCollectionData)(nil),    // 34: sgc7pb.PositionCollectionData
	(*RollNumberData)(nil),            // 35: sgc7pb.RollNumberData
	(*GenGigaSymbolData)(nil),         // 36: sgc7pb.GenGigaSymbolData
	(*MoveSymbolData)(nil),            // 37: sgc7pb.MoveSymbolData
	(*CatchSymbolsData)(nil),          // 38: sgc7pb.CatchSymbolsData
	(*BurstSymbolsData)(nil),          // 39: sgc7pb.BurstSymbolsData
	(*WinResultModifierData)(nil),     // 40: sgc7pb.WinResultModifierData
	(*ReelTriggerData)(nil),           // 41: sgc7pb.ReelTriggerData
	(*JackpotData)(nil),               // 42: sgc7pb.JackpotData
	(*CheckValData)(nil),              // 43: sgc7pb.CheckValData
	(*AddSymbolsData)(nil),            // 44: sgc7pb.AddSymbolsData
	(*AdjacentPayTriggerData)(nil),    // 45: sgc7pb.AdjacentPayTriggerData
	(*GameParam)(nil),                 // 46: sgc7pb.GameParam
	nil,                               // 47: sgc7pb.GameParam.MapComponentsEntry
	nil,                               // 48: sgc7pb.GameParam.MapValsEntry
	nil,                               // 49: sgc7pb.GameParam.MapStrValsEntry
	(*anypb.Any)(nil),                 // 50: google.protobuf.Any
}
var file_lowcode_proto_depIdxs = []int32{
	0,  // 0: sgc7pb.BasicComponentData.basicComponentData:type_name -> sgc7pb.ComponentData
	0,  // 1: sgc7pb.BookOfData.basicComponentData:type_name -> sgc7pb.ComponentData
	0,  // 2: sgc7pb.BookOf2Data.basicComponentData:type_name -> sgc7pb.ComponentData
	0,  // 3: sgc7pb.LightningData.basicComponentData:type_name -> sgc7pb.ComponentData
	0,  // 4: sgc7pb.MultiLevelMysteryData.basicComponentData:type_name -> sgc7pb.ComponentData
	0,  // 5: sgc7pb.MultiLevelReelsData.basicComponentData:type_name -> sgc7pb.ComponentData
	0,  // 6: sgc7pb.MysteryData.basicComponentData:type_name -> sgc7pb.ComponentData
	0,  // 7: sgc7pb.OverlaySymbolData.basicComponentData:type_name -> sgc7pb.ComponentData
	0,  // 8: sgc7pb.BasicWinsData.basicComponentData:type_name -> sgc7pb.ComponentData
	0,  // 9: sgc7pb.ReelSetMysteryData.basicComponentData:type_name -> sgc7pb.ComponentData
	0,  // 10: sgc7pb.MultiLevelReplaceReelData.basicComponentData:type_name -> sgc7pb.ComponentData
	0,  // 11: sgc7pb.RespinData.basicComponentData:type_name -> sgc7pb.ComponentData
	0,  // 12: sgc7pb.Respin2Data.basicComponentData:type_name -> sgc7pb.ComponentData
	0,  // 13: sgc7pb.MaskData.basicComponentData:type_name -> sgc7pb.ComponentData
	0,  // 14: sgc7pb.SymbolCollectionData.basicComponentData:type_name -> sgc7pb.ComponentData
	0,  // 15: sgc7pb.SymbolTriggerData.basicComponentData:type_name -> sgc7pb.ComponentData
	0,  // 16: sgc7pb.MultiWeightAwardsData.basicComponentData:type_name -> sgc7pb.ComponentData
	0,  // 17: sgc7pb.SymbolValWinsData.basicComponentData:type_name -> sgc7pb.ComponentData
	0,  // 18: sgc7pb.WeightReelsData.basicComponentData:type_name -> sgc7pb.ComponentData
	0,  // 19: sgc7pb.ScatterTriggerData.basicComponentData:type_name -> sgc7pb.ComponentData
	0,  // 20: sgc7pb.LinesTriggerData.basicComponentData:type_name -> sgc7pb.ComponentData
	0,  // 21: sgc7pb.WaysTriggerData.basicComponentData:type_name -> sgc7pb.ComponentData
	0,  // 22: sgc7pb.ClusterTriggerData.basicComponentData:type_name -> sgc7pb.ComponentData
	0,  // 23: sgc7pb.WinResultMultiData.basicComponentData:type_name -> sgc7pb.ComponentData
	0,  // 24: sgc7pb.WeightAwardsData.basicComponentData:type_name -> sgc7pb.ComponentData
	0,  // 25: sgc7pb.RemoveSymbolsData.basicComponentData:type_name -> sgc7pb.ComponentData
	0,  // 26: sgc7pb.WeightBranchData.basicComponentData:type_name -> sgc7pb.ComponentData
	0,  // 27: sgc7pb.RollSymbolData.basicComponentData:type_name -> sgc7pb.ComponentData
	0,  // 28: sgc7pb.QueueBranchData.basicComponentData:type_name -> sgc7pb.ComponentData
	0,  // 29: sgc7pb.SymbolCollection2Data.basicComponentData:type_name -> sgc7pb.ComponentData
	0,  // 30: sgc7pb.PiggyBankData.basicComponentData:type_name -> sgc7pb.ComponentData
	0,  // 31: sgc7pb.WinResultCacheData.basicComponentData:type_name -> sgc7pb.ComponentData
	0,  // 32: sgc7pb.PositionCollectionData.basicComponentData:type_name -> sgc7pb.ComponentData
	0,  // 33: sgc7pb.RollNumberData.basicComponentData:type_name -> sgc7pb.ComponentData
	0,  // 34: sgc7pb.GenGigaSymbolData.basicComponentData:type_name -> sgc7pb.ComponentData
	0,  // 35: sgc7pb.MoveSymbolData.basicComponentData:type_name -> sgc7pb.ComponentData
	0,  // 36: sgc7pb.CatchSymbolsData.basicComponentData:type_name -> sgc7pb.ComponentData
	0,  // 37: sgc7pb.BurstSymbolsData.basicComponentData:type_name -> sgc7pb.ComponentData
	0,  // 38: sgc7pb.WinResultModifierData.basicComponentData:type_name -> sgc7pb.ComponentData
	0,  // 39: sgc7pb.ReelTriggerData.basicComponentData:type_name -> sgc7pb.ComponentData
	0,  // 40: sgc7pb.JackpotData.basicComponentData:type_name -> sgc7pb.ComponentData
	0,  // 41: sgc7pb.CheckValData.basicComponentData:type_name -> sgc7pb.ComponentData
	0,  // 42: sgc7pb.AddSymbolsData.basicComponentData:type_name -> sgc7pb.ComponentData
	0,  // 43: sgc7pb.AdjacentPayTriggerData.basicComponentData:type_name -> sgc7pb.ComponentData
	47, // 44: sgc7pb.GameParam.mapComponents:type_name -> sgc7pb.GameParam.MapComponentsEntry
	48, // 45: sgc7pb.GameParam.mapVals:type_name -> sgc7pb.GameParam.MapValsEntry
	49, // 46: sgc7pb.GameParam.mapStrVals:type_name -> sgc7pb.GameParam.MapStrValsEntry
	50, // 47: sgc7pb.GameParam.MapComponentsEntry.value:type_name -> google.protobuf.Any
	48, // [48:48] is the sub-list for method output_type
	48, // [48:48] is the sub-list for method input_type
	48, // [48:48] is the sub-list for extension type_name
	48, // [48:48] is the sub-list for extension extendee
	0,  // [0:48] is the sub-list for field type_name
}

func init() { file_lowcode_proto_init() }
func file_lowcode_proto_init() {
	if File_lowcode_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_lowcode_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*ComponentData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lowcode_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*BasicComponentData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lowcode_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*BookOfData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lowcode_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*BookOf2Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lowcode_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*CollectorData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lowcode_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*LightningData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lowcode_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*MultiLevelMysteryData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lowcode_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*MultiLevelReelsData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lowcode_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*MysteryData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lowcode_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*OverlaySymbolData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lowcode_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*BasicWinsData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lowcode_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*ReelSetMysteryData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lowcode_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*MultiLevelReplaceReelData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lowcode_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*RespinData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lowcode_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*Respin2Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lowcode_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*MaskData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lowcode_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*SymbolCollectionData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lowcode_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*SymbolTriggerData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lowcode_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*MultiWeightAwardsData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lowcode_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*SymbolValWinsData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lowcode_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*WeightReelsData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lowcode_proto_msgTypes[21].Exporter = func(v any, i int) any {
			switch v := v.(*ScatterTriggerData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lowcode_proto_msgTypes[22].Exporter = func(v any, i int) any {
			switch v := v.(*LinesTriggerData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lowcode_proto_msgTypes[23].Exporter = func(v any, i int) any {
			switch v := v.(*WaysTriggerData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lowcode_proto_msgTypes[24].Exporter = func(v any, i int) any {
			switch v := v.(*ClusterTriggerData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lowcode_proto_msgTypes[25].Exporter = func(v any, i int) any {
			switch v := v.(*WinResultMultiData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lowcode_proto_msgTypes[26].Exporter = func(v any, i int) any {
			switch v := v.(*WeightAwardsData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lowcode_proto_msgTypes[27].Exporter = func(v any, i int) any {
			switch v := v.(*RemoveSymbolsData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lowcode_proto_msgTypes[28].Exporter = func(v any, i int) any {
			switch v := v.(*WeightBranchData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lowcode_proto_msgTypes[29].Exporter = func(v any, i int) any {
			switch v := v.(*RollSymbolData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lowcode_proto_msgTypes[30].Exporter = func(v any, i int) any {
			switch v := v.(*QueueBranchData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lowcode_proto_msgTypes[31].Exporter = func(v any, i int) any {
			switch v := v.(*SymbolCollection2Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lowcode_proto_msgTypes[32].Exporter = func(v any, i int) any {
			switch v := v.(*PiggyBankData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lowcode_proto_msgTypes[33].Exporter = func(v any, i int) any {
			switch v := v.(*WinResultCacheData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lowcode_proto_msgTypes[34].Exporter = func(v any, i int) any {
			switch v := v.(*PositionCollectionData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lowcode_proto_msgTypes[35].Exporter = func(v any, i int) any {
			switch v := v.(*RollNumberData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lowcode_proto_msgTypes[36].Exporter = func(v any, i int) any {
			switch v := v.(*GenGigaSymbolData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lowcode_proto_msgTypes[37].Exporter = func(v any, i int) any {
			switch v := v.(*MoveSymbolData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lowcode_proto_msgTypes[38].Exporter = func(v any, i int) any {
			switch v := v.(*CatchSymbolsData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lowcode_proto_msgTypes[39].Exporter = func(v any, i int) any {
			switch v := v.(*BurstSymbolsData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lowcode_proto_msgTypes[40].Exporter = func(v any, i int) any {
			switch v := v.(*WinResultModifierData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lowcode_proto_msgTypes[41].Exporter = func(v any, i int) any {
			switch v := v.(*ReelTriggerData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lowcode_proto_msgTypes[42].Exporter = func(v any, i int) any {
			switch v := v.(*JackpotData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lowcode_proto_msgTypes[43].Exporter = func(v any, i int) any {
			switch v := v.(*CheckValData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lowcode_proto_msgTypes[44].Exporter = func(v any, i int) any {
			switch v := v.(*AddSymbolsData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lowcode_proto_msgTypes[45].Exporter = func(v any, i int) any {
			switch v := v.(*AdjacentPayTriggerData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lowcode_proto_msgTypes[46].Exporter = func(v any, i int) any {
			switch v := v.(*GameParam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_lowcode_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   50,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_lowcode_proto_goTypes,
		DependencyIndexes: file_lowcode_proto_depIdxs,
		MessageInfos:      file_lowcode_proto_msgTypes,
	}.Build()
	File_lowcode_proto = out.File
	file_lowcode_proto_rawDesc = nil
	file_lowcode_proto_goTypes = nil
	file_lowcode_proto_depIdxs = nil
}
